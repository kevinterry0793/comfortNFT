{"ast":null,"code":"import React, { useContext, useMemo, createContext, useState, useCallback, useEffect, Fragment } from 'react';\nimport styled, { ThemeContext as ThemeContext$1, ThemeProvider as ThemeProvider$1, keyframes } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: \", \";\\n  display: \", \";\\n  flex: \", \";\\n  flex-direction: \", \";\\n  height: \", \";\\n  justify-content: \", \";\\n  margin: \", \";\\n  margin-bottom: \", \";\\n  margin-left: \", \";\\n  margin-right: \", \";\\n  margin-top: \", \";\\n  max-height: \", \";\\n  max-width: \", \";\\n  min-height: \", \";\\n  min-width: \", \";\\n  overflow: \", \";\\n  padding: \", \";\\n  padding-bottom: \", \";\\n  padding-left: \", \";\\n  padding-right: \", \";\\n  padding-top: \", \";\\n  position: \", \";\\n  width: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Box = function Box(_ref) {\n  var children = _ref.children,\n      column = _ref.column,\n      height = _ref.height,\n      _ref$margin = _ref.margin,\n      margin = _ref$margin === void 0 ? 0 : _ref$margin,\n      _ref$marginBottom = _ref.marginBottom,\n      marginBottom = _ref$marginBottom === void 0 ? 0 : _ref$marginBottom,\n      _ref$marginHorizontal = _ref.marginHorizontal,\n      marginHorizontal = _ref$marginHorizontal === void 0 ? 0 : _ref$marginHorizontal,\n      _ref$marginLeft = _ref.marginLeft,\n      marginLeft = _ref$marginLeft === void 0 ? 0 : _ref$marginLeft,\n      _ref$marginRight = _ref.marginRight,\n      marginRight = _ref$marginRight === void 0 ? 0 : _ref$marginRight,\n      _ref$marginTop = _ref.marginTop,\n      marginTop = _ref$marginTop === void 0 ? 0 : _ref$marginTop,\n      _ref$marginVertical = _ref.marginVertical,\n      marginVertical = _ref$marginVertical === void 0 ? 0 : _ref$marginVertical,\n      maxHeight = _ref.maxHeight,\n      maxWidth = _ref.maxWidth,\n      minHeight = _ref.minHeight,\n      minWidth = _ref.minWidth,\n      overflow = _ref.overflow,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === void 0 ? 0 : _ref$padding,\n      _ref$paddingBottom = _ref.paddingBottom,\n      paddingBottom = _ref$paddingBottom === void 0 ? 0 : _ref$paddingBottom,\n      _ref$paddingHorizonta = _ref.paddingHorizontal,\n      paddingHorizontal = _ref$paddingHorizonta === void 0 ? 0 : _ref$paddingHorizonta,\n      _ref$paddingLeft = _ref.paddingLeft,\n      paddingLeft = _ref$paddingLeft === void 0 ? 0 : _ref$paddingLeft,\n      _ref$paddingRight = _ref.paddingRight,\n      paddingRight = _ref$paddingRight === void 0 ? 0 : _ref$paddingRight,\n      _ref$paddingTop = _ref.paddingTop,\n      paddingTop = _ref$paddingTop === void 0 ? 0 : _ref$paddingTop,\n      _ref$paddingVertical = _ref.paddingVertical,\n      paddingVertical = _ref$paddingVertical === void 0 ? 0 : _ref$paddingVertical,\n      position = _ref.position,\n      reverse = _ref.reverse,\n      row = _ref.row,\n      width = _ref.width,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"column\", \"height\", \"margin\", \"marginBottom\", \"marginHorizontal\", \"marginLeft\", \"marginRight\", \"marginTop\", \"marginVertical\", \"maxHeight\", \"maxWidth\", \"minHeight\", \"minWidth\", \"overflow\", \"padding\", \"paddingBottom\", \"paddingHorizontal\", \"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingVertical\", \"position\", \"reverse\", \"row\", \"width\"]);\n\n  var _useContext = useContext(ThemeContext$1),\n      spacing = _useContext.spacing;\n\n  var display = useMemo(function () {\n    if (row || column) {\n      return 'flex';\n    }\n\n    return 'block';\n  }, [column, row]);\n  var flexDirection = useMemo(function () {\n    if (row && reverse) {\n      return 'row-reverse';\n    }\n\n    if (column && reverse) {\n      return 'column-reverse';\n    } else if (column) {\n      return 'column';\n    }\n\n    return undefined;\n  }, [column]);\n  var boxHeight = useMemo(function () {\n    if (height) {\n      return typeof height === 'number' ? height + 'px' : height;\n    }\n\n    return undefined;\n  }, [height]);\n  var boxWidth = useMemo(function () {\n    if (width) {\n      return typeof width === 'number' ? width + 'px' : width;\n    }\n\n    return undefined;\n  }, [width]);\n  var minBoxHeight = useMemo(function () {\n    if (typeof minHeight !== 'undefined') {\n      return typeof minHeight === 'number' ? minHeight + 'px' : minHeight;\n    }\n\n    return minHeight;\n  }, [minHeight]);\n  var minBoxWidth = useMemo(function () {\n    if (typeof minWidth !== 'undefined') {\n      return typeof minWidth === 'number' ? minWidth + 'px' : minWidth;\n    }\n\n    return minWidth;\n  }, [minWidth]);\n  var maxBoxHeight = useMemo(function () {\n    if (maxHeight) {\n      return typeof maxHeight === 'number' ? maxHeight + 'px' : maxHeight;\n    }\n\n    return undefined;\n  }, [maxHeight]);\n  var maxBoxWidth = useMemo(function () {\n    if (maxWidth) {\n      return typeof maxWidth === 'number' ? maxWidth + 'px' : maxWidth;\n    }\n\n    return undefined;\n  }, [maxWidth]);\n  return React.createElement(StyledBox, Object.assign({}, props, {\n    display: display,\n    flexDirection: flexDirection,\n    height: boxHeight,\n    margin: spacing[margin || 0],\n    marginBottom: spacing[marginBottom || marginVertical || 0],\n    marginLeft: spacing[marginLeft || marginHorizontal || 0],\n    marginRight: spacing[marginRight || marginHorizontal || 0],\n    marginTop: spacing[marginTop || marginVertical || 0],\n    maxHeight: maxBoxHeight,\n    maxWidth: maxBoxWidth,\n    minHeight: minBoxHeight,\n    minWidth: minBoxWidth,\n    overflow: overflow,\n    padding: spacing[padding || 0],\n    paddingBottom: spacing[paddingBottom || paddingVertical || 0],\n    paddingLeft: spacing[paddingLeft || paddingHorizontal || 0],\n    paddingRight: spacing[paddingRight || paddingHorizontal || 0],\n    paddingTop: spacing[paddingTop || paddingVertical || 0],\n    position: position,\n    width: boxWidth\n  }), children);\n};\n\nvar StyledBox = styled.div(_templateObject(), function (props) {\n  return props.alignItems;\n}, function (props) {\n  return props.display;\n}, function (props) {\n  return props.flex;\n}, function (props) {\n  return props.flexDirection;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.justifyContent;\n}, function (props) {\n  return props.margin ? props.margin + 'px' : undefined;\n}, function (props) {\n  return props.marginBottom ? props.marginBottom + 'px' : undefined;\n}, function (props) {\n  return props.marginLeft ? props.marginLeft + 'px' : undefined;\n}, function (props) {\n  return props.marginRight ? props.marginRight + 'px' : undefined;\n}, function (props) {\n  return props.marginTop ? props.marginTop + 'px' : undefined;\n}, function (props) {\n  return props.maxHeight;\n}, function (props) {\n  return props.maxWidth;\n}, function (props) {\n  return props.minHeight;\n}, function (props) {\n  return props.minWidth;\n}, function (props) {\n  return props.overflow;\n}, function (props) {\n  return props.padding ? props.padding + 'px' : undefined;\n}, function (props) {\n  return props.paddingBottom ? props.paddingBottom + 'px' : undefined;\n}, function (props) {\n  return props.paddingLeft ? props.paddingLeft + 'px' : undefined;\n}, function (props) {\n  return props.paddingRight ? props.paddingRight + 'px' : undefined;\n}, function (props) {\n  return props.paddingTop ? props.paddingTop + 'px' : undefined;\n}, function (props) {\n  return props.position;\n}, function (props) {\n  return props.width;\n});\nvar DEFAULT_COLOR = {\n  h: 200,\n  s: 100,\n  l: 50\n};\n\nvar createTheme = function createTheme(config) {\n  var _ref = config || {},\n      _ref$baseColor = _ref.baseColor,\n      baseColor = _ref$baseColor === void 0 ? DEFAULT_COLOR : _ref$baseColor,\n      baseColorDark = _ref.baseColorDark,\n      baseGreyColor = _ref.baseGreyColor,\n      baseGreyColorDark = _ref.baseGreyColorDark,\n      _ref$borderRadius = _ref.borderRadius,\n      borderRadius = _ref$borderRadius === void 0 ? 24 : _ref$borderRadius,\n      _ref$siteWidth = _ref.siteWidth,\n      siteWidth = _ref$siteWidth === void 0 ? 1200 : _ref$siteWidth;\n\n  var h = baseColor.h,\n      s = baseColor.s;\n\n  var _ref2 = baseColorDark || baseColor,\n      hDark = _ref2.h,\n      sDark = _ref2.s;\n\n  var _ref3 = baseGreyColor || baseColor,\n      baseGreyH = _ref3.h;\n\n  var _ref4 = baseGreyColorDark || baseColorDark || baseGreyColor || baseColor,\n      baseGreyDarkH = _ref4.h;\n\n  var blackHSLA = {\n    h: baseGreyH,\n    s: 95,\n    l: 4\n  };\n  var whiteHSLA = {\n    h: baseGreyH,\n    s: 100,\n    l: 100\n  };\n  var black = hslToCssString(blackHSLA);\n  var white = hslToCssString(whiteHSLA);\n  var grey = generateGreys(baseGreyH);\n  var blackDarkHSLA = {\n    h: baseGreyDarkH,\n    s: 95,\n    l: 4\n  };\n  var whiteDarkHSLA = {\n    h: baseGreyDarkH,\n    s: 100,\n    l: 100\n  };\n  var blackDark = hslToCssString(blackDarkHSLA);\n  var whiteDark = hslToCssString(whiteDarkHSLA);\n  var greyDark = generateGreys(baseGreyDarkH);\n  var buttonSizes = {\n    lg: 72,\n    md: 48,\n    sm: 36\n  };\n  var colors = {\n    black: black,\n    grey: grey,\n    primary: {\n      dark: hslToCssString({\n        h: h,\n        s: s,\n        l: 15\n      }),\n      light: hslToCssString({\n        h: h,\n        s: s,\n        l: 75\n      }),\n      main: hslToCssString(baseColor)\n    },\n    white: white\n  };\n  var colorsDark = {\n    black: blackDark,\n    grey: greyDark,\n    primary: {\n      dark: hslToCssString({\n        h: hDark,\n        s: sDark,\n        l: 15\n      }),\n      light: hslToCssString({\n        h: hDark,\n        s: sDark,\n        l: 75\n      }),\n      main: hslToCssString(baseColorDark || baseColor)\n    },\n    white: whiteDark\n  };\n  var spacing = {\n    0: 0,\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 72,\n    8: 96\n  };\n  var lightTheme = {\n    baseBg: \"radial-gradient(circle at top, \" + grey[100] + \", \" + grey[200] + \")\",\n    baseColor: grey[200],\n    borderRadius: borderRadius,\n    buttonSizes: buttonSizes,\n    colors: colors,\n    highlightColor: grey[100],\n    shadowColor: grey[300],\n    siteWidth: siteWidth,\n    spacing: spacing,\n    surfaces: generateSurfaces({\n      dark: grey[300],\n      light: grey[100],\n      main: grey[200]\n    }, hslToCssString(_extends({}, whiteHSLA, {\n      a: 100\n    })), hslToCssString(_extends({}, blackHSLA, {\n      a: 15\n    }))),\n    textColor: black\n  };\n\n  var darkTheme = _extends({}, lightTheme, {\n    baseBg: \"radial-gradient(circle at top, \" + greyDark[700] + \", \" + greyDark[800] + \")\",\n    baseColor: greyDark[800],\n    colors: colorsDark,\n    highlightColor: greyDark[700],\n    shadowColor: greyDark[900],\n    surfaces: generateSurfaces({\n      dark: greyDark[900],\n      light: greyDark[700],\n      main: greyDark[800]\n    }, hslToCssString(_extends({}, whiteDarkHSLA, {\n      a: 7.5\n    })), greyDark[900]),\n    textColor: whiteDark\n  });\n\n  return {\n    dark: darkTheme,\n    light: lightTheme\n  };\n};\n\nvar hslToCssString = function hslToCssString(hsla) {\n  var h = hsla.h,\n      s = hsla.s,\n      l = hsla.l,\n      _hsla$a = hsla.a,\n      a = _hsla$a === void 0 ? 100 : _hsla$a;\n  return \"hsl(\" + h + \"deg \" + s + \"% \" + l + \"% / \" + a + \"%)\";\n};\n\nvar generateGreys = function generateGreys(h) {\n  return {\n    100: hslToCssString({\n      h: h,\n      s: 20,\n      l: 96\n    }),\n    200: hslToCssString({\n      h: h,\n      s: 20,\n      l: 94\n    }),\n    300: hslToCssString({\n      h: h,\n      s: 20,\n      l: 90\n    }),\n    400: hslToCssString({\n      h: h,\n      s: 20,\n      l: 70\n    }),\n    500: hslToCssString({\n      h: h,\n      s: 7,\n      l: 52\n    }),\n    600: hslToCssString({\n      h: h,\n      s: 10,\n      l: 37\n    }),\n    700: hslToCssString({\n      h: h,\n      s: 17,\n      l: 15\n    }),\n    800: hslToCssString({\n      h: h,\n      s: 20,\n      l: 10\n    }),\n    900: hslToCssString({\n      h: h,\n      s: 20,\n      l: 5\n    })\n  };\n};\n\nvar generateSurfaces = function generateSurfaces(base, highlight, shadow) {\n  var baseBg = \"radial-gradient(circle at top, \" + base.light + \", \" + base.main + \")\";\n  return {\n    N2: {\n      background: \"radial-gradient(circle at top, \" + base.main + \", \" + base.dark + \")\",\n      border: '0',\n      highlight: \"inset 4px -4px 8px -4px \" + highlight,\n      shadow: \"inset -4px 4px 8px -4px \" + shadow\n    },\n    N1: {\n      background: baseBg,\n      border: '0',\n      highlight: \"inset 2px -2px 4px \" + highlight,\n      shadow: \"inset -2px 2px 4px \" + shadow\n    },\n    0: {\n      background: baseBg,\n      border: \"0\",\n      highlight: \"inset -1px 1px 0px \" + highlight,\n      shadow: \"0px 0px 1px 1px \" + shadow\n    },\n    1: {\n      background: baseBg,\n      border: '0',\n      highlight: \"4px -4px 8px 0px \" + highlight,\n      shadow: \"-4px 4px 8px 0 \" + shadow\n    },\n    2: {\n      background: baseBg,\n      border: '0',\n      highlight: \"8px -8px 16px 0px \" + highlight,\n      shadow: \"-8px 8px 16px 0 \" + shadow\n    }\n  };\n};\n\nvar _createTheme = createTheme(),\n    lightTheme = _createTheme.light;\n\nvar ThemeContext = createContext({\n  onToggleDarkMode: function onToggleDarkMode() {},\n  theme: lightTheme\n});\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      darkModeEnabled = _ref.darkModeEnabled,\n      darkTheme = _ref.darkTheme,\n      lightTheme = _ref.lightTheme;\n\n  var _useState = useState(darkModeEnabled),\n      darkMode = _useState[0],\n      setDarkMode = _useState[1];\n\n  var activeTheme = useMemo(function () {\n    if (darkMode) return darkTheme;\n    return lightTheme;\n  }, [darkMode, darkTheme, lightTheme]);\n  var handleToggleDarkMode = useCallback(function () {\n    setDarkMode(!darkMode);\n  }, [darkMode, setDarkMode]);\n  var baseBg = activeTheme.baseBg,\n      textColor = activeTheme.textColor;\n  useEffect(function () {\n    document.body.style.background = baseBg;\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.color = textColor;\n  }, [baseBg, textColor]);\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      darkMode: darkMode,\n      onToggleDarkMode: handleToggleDarkMode,\n      theme: activeTheme\n    }\n  }, React.createElement(ThemeProvider$1, {\n    theme: activeTheme\n  }, children));\n};\n\nvar useTheme = function useTheme() {\n  var _useContext = useContext(ThemeContext),\n      darkMode = _useContext.darkMode,\n      onToggleDarkMode = _useContext.onToggleDarkMode,\n      theme = _useContext.theme;\n\n  return _extends({\n    darkMode: darkMode,\n    onToggleDarkMode: onToggleDarkMode\n  }, theme);\n};\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  color: inherit;\\n  display: flex;\\n  flex: 1;\\n  height: 100%;\\n  justify-content: center;\\n  margin: 0 \", \"px;\\n  padding: 0 \", \"px;\\n  text-decoration: none;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  color: inherit;\\n  display: flex;\\n  flex: 1;\\n  height: 100%;\\n  justify-content: center;\\n  margin: 0 \", \"px;\\n  padding: 0 \", \"px;\\n  text-decoration: none;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  opacity: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  background: \", \";\\n  border: 0;\\n  border-radius: \", \"px;\\n  box-shadow: \", \";\\n  box-sizing: border-box;\\n  color: \", \";\\n  cursor: pointer;\\n  display: flex;\\n  font-size: \", \"px;\\n  font-weight: 700;\\n  height: \", \"px;\\n  justify-content: center;\\n  margin: 0;\\n  min-width: \", \"px;\\n  outline: none;\\n  padding-left: \", \"px;\\n  padding-right: \", \"px;\\n  pointer-events: \", \";\\n  white-space: nowrap;\\n  width: \", \";\\n\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      full = _ref.full,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      round = _ref.round,\n      size = _ref.size,\n      text = _ref.text,\n      to = _ref.to,\n      variant = _ref.variant;\n  var _useContext$theme = useContext(ThemeContext).theme,\n      baseBg = _useContext$theme.baseBg,\n      buttonSizes = _useContext$theme.buttonSizes,\n      colors = _useContext$theme.colors,\n      spacing = _useContext$theme.spacing,\n      surfaces = _useContext$theme.surfaces,\n      textColor = _useContext$theme.textColor;\n  var boxShadow;\n  var buttonSize;\n  var buttonPadding;\n  var fontSize;\n\n  switch (size) {\n    case 'sm':\n      boxShadow = surfaces[1].shadow + \", \" + surfaces[1].highlight;\n      buttonPadding = spacing[3];\n      buttonSize = buttonSizes.sm;\n      fontSize = 14;\n      break;\n\n    case 'lg':\n      boxShadow = surfaces[2].shadow + \", \" + surfaces[2].highlight;\n      buttonPadding = spacing[4];\n      buttonSize = buttonSizes.lg;\n      fontSize = 18;\n      break;\n\n    case 'md':\n    default:\n      boxShadow = surfaces[2].shadow + \", \" + surfaces[2].highlight;\n      buttonPadding = spacing[4];\n      buttonSize = buttonSizes.md;\n      fontSize = 16;\n  }\n\n  var background;\n  var buttonColor;\n\n  switch (variant) {\n    case 'secondary':\n      background = baseBg;\n      buttonColor = colors.primary.main;\n      break;\n\n    case 'tertiary':\n      background = 'transparent';\n      boxShadow = surfaces[0].shadow + \", \" + surfaces[0].highlight;\n      buttonColor = textColor;\n      break;\n\n    case 'default':\n    default:\n      background = colors.primary.main;\n      buttonColor = colors.white;\n  }\n\n  var ButtonText = useMemo(function () {\n    return React.createElement(StyledButtonText, {\n      color: buttonColor,\n      disabled: disabled\n    }, text);\n  }, [buttonColor, disabled, text]);\n  var ButtonChild = useMemo(function () {\n    if (to) {\n      return React.createElement(StyledLink, {\n        to: to\n      }, ButtonText);\n    } else if (href) {\n      return React.createElement(StyledExternalLink, {\n        href: href,\n        target: \"__blank\"\n      }, ButtonText);\n    } else {\n      return ButtonText;\n    }\n  }, [ButtonText, href, text, to]);\n  return React.createElement(StyledButton, {\n    background: background,\n    boxShadow: boxShadow,\n    color: buttonColor,\n    disabled: disabled,\n    fontSize: fontSize,\n    full: full,\n    onClick: onClick,\n    padding: buttonPadding,\n    round: round,\n    size: buttonSize\n  }, children, ButtonChild);\n};\n\nvar StyledButton = styled.button(_templateObject$1(), function (props) {\n  return props.background;\n}, function (props) {\n  return props.theme.borderRadius;\n}, function (props) {\n  return props.boxShadow;\n}, function (props) {\n  return !props.disabled ? props.color : \"\" + props.color;\n}, function (props) {\n  return props.fontSize;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.round ? 0 : props.padding;\n}, function (props) {\n  return props.round ? 0 : props.padding;\n}, function (props) {\n  return !props.disabled ? undefined : 'none';\n}, function (props) {\n  return props.full ? '100%' : undefined;\n});\nvar StyledButtonText = styled.span(_templateObject2(), function (props) {\n  return props.disabled ? props.theme.textColor : props.color;\n}, function (props) {\n  return props.disabled ? 0.66 : 1;\n});\nvar StyledExternalLink = styled.a(_templateObject3(), function (props) {\n  return -props.theme.spacing[4];\n}, function (props) {\n  return props.theme.spacing[4];\n});\nvar StyledLink = styled(Link)(_templateObject4(), function (props) {\n  return -props.theme.spacing[4];\n}, function (props) {\n  return props.theme.spacing[4];\n});\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  border: \", \";\\n  border-radius: \", \"px;\\n  box-shadow: \", \";\\n  box-sizing: \", \";\\n  height: \", \";\\n  width: \", \";\\n\"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Surface = function Surface(_ref) {\n  var children = _ref.children,\n      detached = _ref.detached,\n      _ref$elevation = _ref.elevation,\n      elevation = _ref$elevation === void 0 ? 0 : _ref$elevation,\n      fill = _ref.fill;\n  var surfaces = useContext(ThemeContext).theme.surfaces;\n  var _surfaces$elevation = surfaces[elevation],\n      background = _surfaces$elevation.background,\n      border = _surfaces$elevation.border,\n      highlight = _surfaces$elevation.highlight,\n      shadow = _surfaces$elevation.shadow;\n  var boxShadow = shadow;\n\n  if (!detached) {\n    boxShadow = boxShadow + \", \" + highlight;\n  }\n\n  return React.createElement(StyledSurface, {\n    background: background,\n    border: border,\n    boxShadow: boxShadow,\n    fill: fill\n  }, children);\n};\n\nvar StyledSurface = styled.div(_templateObject$2(), function (props) {\n  return props.background;\n}, function (props) {\n  return props.border;\n}, function (props) {\n  return props.theme.borderRadius;\n}, function (props) {\n  return props.boxShadow;\n}, function (props) {\n  return props.fill ? 'border-box' : undefined;\n}, function (props) {\n  return props.fill ? '100%' : undefined;\n}, function (props) {\n  return props.fill ? '100%' : undefined;\n});\n\nvar Card = function Card(_ref) {\n  var children = _ref.children;\n  return React.createElement(Surface, {\n    elevation: \"N1\"\n  }, React.createElement(Box, {\n    overflow: \"hidden\"\n  }, children));\n};\n\nfunction _templateObject$3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: \", \"px;\\n  min-height: \", \"px;\\n  min-width: \", \"px;\\n  width: \", \"px;\\n\"]);\n\n  _templateObject$3 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Spacer = function Spacer(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size;\n\n  var _useContext = useContext(ThemeContext$1),\n      spacing = _useContext.spacing;\n\n  var s;\n\n  switch (size) {\n    case 'lg':\n      s = spacing[7];\n      break;\n\n    case 'sm':\n      s = spacing[2];\n      break;\n\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return React.createElement(StyledSpacer, {\n    size: s\n  });\n};\n\nvar StyledSpacer = styled.div(_templateObject$3(), function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n});\n\nfunction _templateObject2$1() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2$1 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject$4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  display: flex;\\n  margin: 0;\\n  margin: \", \"px;\\n\"]);\n\n  _templateObject$4 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar CardActions = function CardActions(_ref) {\n  var children = _ref.children;\n  var l = React.Children.toArray(children).length;\n  return React.createElement(StyledCardActions, null, React.Children.map(children, function (child, i) {\n    return React.createElement(Fragment, null, React.createElement(StyledCardAction, null, child), i < l - 1 && React.createElement(Spacer, null));\n  }));\n};\n\nvar StyledCardActions = styled.div(_templateObject$4(), function (props) {\n  return props.theme.spacing[4];\n});\nvar StyledCardAction = styled.div(_templateObject2$1());\n\nvar CardContent = function CardContent(_ref) {\n  var children = _ref.children;\n  return React.createElement(Box, {\n    column: true,\n    margin: 4\n  }, children);\n};\n\nfunction _templateObject$5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 48px;\\n  justify-content: center;\\n  margin: \", \"px auto;\\n\"]);\n\n  _templateObject$5 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar CardIcon = function CardIcon(_ref) {\n  var children = _ref.children;\n  return React.createElement(StyledCardIcon, null, children);\n};\n\nvar StyledCardIcon = styled.div(_templateObject$5(), function (props) {\n  return props.theme.spacing[4];\n});\n\nfunction _templateObject$6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  box-shadow: \", \";\\n  height: \", \";\\n  width: \", \";\\n\"]);\n\n  _templateObject$6 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Separator = function Separator(_ref) {\n  var orientation = _ref.orientation,\n      stretch = _ref.stretch;\n  var _useContext$theme = useContext(ThemeContext).theme,\n      highlightColor = _useContext$theme.highlightColor,\n      shadowColor = _useContext$theme.shadowColor;\n  var boxShadow = \"0 -1px 0px \" + shadowColor + \", 0 1px 0px \" + highlightColor;\n\n  if (orientation === 'vertical') {\n    boxShadow = \"-1px 0px 0px \" + shadowColor + \", 1px 0px 0px \" + highlightColor;\n  }\n\n  var Content = useMemo(function () {\n    return React.createElement(StyledSeparator, {\n      boxShadow: boxShadow,\n      orientation: orientation\n    });\n  }, [boxShadow, orientation]);\n\n  if (stretch) {\n    return React.createElement(\"div\", {\n      style: {\n        alignSelf: 'stretch'\n      }\n    }, Content);\n  }\n\n  return Content;\n};\n\nvar StyledSeparator = styled.div(_templateObject$6(), function (props) {\n  return props.boxShadow;\n}, function (props) {\n  return props.orientation === 'vertical' ? '100%' : '1px';\n}, function (props) {\n  return props.orientation === 'vertical' ? '1px' : '100%';\n});\n\nfunction _templateObject$7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  font-size: 18px;\\n  text-align: center;\\n\"]);\n\n  _templateObject$7 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar CardTitle = function CardTitle(_ref) {\n  var text = _ref.text;\n  return React.createElement(Box, {\n    marginTop: 4\n  }, React.createElement(StyledCardTitle, null, text), React.createElement(Box, {\n    marginTop: 4,\n    marginHorizontal: 4\n  }, React.createElement(Separator, null)));\n};\n\nvar StyledCardTitle = styled.span(_templateObject$7());\n\nfunction _templateObject$8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  fill: \", \";\\n\"]);\n\n  _templateObject$8 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Close = function Close(_ref) {\n  var color = _ref.color;\n\n  var _useTheme = useTheme(),\n      textColor = _useTheme.textColor;\n\n  return React.createElement(StyledSVG, {\n    color: color ? color : textColor\n  }, React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n  }));\n};\n\nvar StyledSVG = styled.svg.attrs(function () {\n  return {\n    height: '24',\n    viewBox: '0 0 24 24',\n    width: '24'\n  };\n})(_templateObject$8(), function (props) {\n  return props.color;\n});\n\nfunction _templateObject$9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  box-sizing: border-box;\\n  margin: 0 auto;\\n  max-width: \", \"px;\\n  padding: 0 \", \"px;\\n  width: 100%;\\n\"]);\n\n  _templateObject$9 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Container = function Container(_ref) {\n  var children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size;\n\n  var _useContext = useContext(ThemeContext$1),\n      siteWidth = _useContext.siteWidth;\n\n  var width;\n\n  switch (size) {\n    case 'sm':\n      width = siteWidth / 2;\n      break;\n\n    case 'md':\n      width = siteWidth * (2 / 3);\n      break;\n\n    case 'lg':\n    default:\n      width = siteWidth;\n  }\n\n  return React.createElement(StyledContainer, {\n    width: width\n  }, children);\n};\n\nvar StyledContainer = styled.div(_templateObject$9(), function (props) {\n  return props.width;\n}, function (props) {\n  return props.theme.spacing[4];\n});\n\nvar Emoji = function Emoji(_ref) {\n  var emoji = _ref.emoji,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size;\n  return React.createElement(\"span\", {\n    role: \"img\",\n    style: {\n      fontSize: size\n    }\n  }, emoji);\n};\n\nfunction _templateObject$a() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background: none;\\n  border: 0;\\n  color: \", \";\\n  font-size: 18px;\\n  flex: 1;\\n  height: \", \"px;\\n  margin: 0;\\n  padding: 0;\\n  outline: none;\\n\"]);\n\n  _templateObject$a = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Input = function Input(_ref) {\n  var endAdornment = _ref.endAdornment,\n      onChange = _ref.onChange,\n      placeholder = _ref.placeholder,\n      size = _ref.size,\n      startAdornment = _ref.startAdornment,\n      value = _ref.value;\n  var height = 56;\n\n  if (size === 'sm') {\n    height = 44;\n  } else if (size === 'lg') {\n    height = 72;\n  }\n\n  return React.createElement(Surface, {\n    elevation: \"N2\"\n  }, React.createElement(Box, {\n    alignItems: \"center\",\n    height: height,\n    paddingHorizontal: 3,\n    row: true\n  }, !!startAdornment && React.createElement(Fragment, null, startAdornment, React.createElement(Spacer, {\n    size: \"sm\"\n  })), React.createElement(StyledInput, {\n    height: height,\n    onChange: onChange,\n    placeholder: placeholder,\n    value: value\n  }), !!endAdornment && React.createElement(Fragment, null, React.createElement(Spacer, {\n    size: \"sm\"\n  }), endAdornment)));\n};\n\nvar StyledInput = styled.input(_templateObject$a(), function (props) {\n  return props.theme.textColor;\n}, function (props) {\n  return props.height;\n});\n\nfunction _templateObject4$1() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n  max-height: calc(100vh - 72px);\\n  max-width: 600px;\\n  position: relative;\\n  width: 100%;\\n  @media (max-width: 600px) {\\n    flex: 1;\\n    position: absolute;\\n    top: 100%;\\n    right: 0;\\n    left: 0;\\n    max-height: calc(100% - \", \"px);\\n    animation: \", \" .3s forwards ease-out;\\n  }\\n\"]);\n\n  _templateObject4$1 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3$1() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  opacity: 0.75;\\n  position: absolute;\\n  top: 0; right: 0; bottom: 0; left: 0;\\n\"]);\n\n  _templateObject3$1 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  backdrop-filter: blur(5px);\\n  bottom: 0;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  left: 0;\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  z-index: 1000;\\n\"]);\n\n  _templateObject2$2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject$b() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  0% {\\n    transform: translateY(0%);\\n  }\\n  100% {\\n    transform: translateY(-100%);\\n  }\\n\"]);\n\n  _templateObject$b = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Modal = function Modal(_ref) {\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      onDismiss = _ref.onDismiss;\n\n  if (isOpen) {\n    return React.createElement(StyledModalWrapper, null, React.createElement(StyledModalBackdrop, {\n      onClick: onDismiss\n    }), React.createElement(StyledResponsiveWrapper, null, React.createElement(Surface, {\n      detached: true,\n      elevation: 2\n    }, children)));\n  }\n\n  return null;\n};\n\nvar mobileKeyframes = keyframes(_templateObject$b());\nvar StyledModalWrapper = styled.div(_templateObject2$2());\nvar StyledModalBackdrop = styled.div(_templateObject3$1(), function (props) {\n  return props.theme.colors.black;\n});\nvar StyledResponsiveWrapper = styled.div(_templateObject4$1(), function (props) {\n  return props.theme.spacing[4];\n}, mobileKeyframes);\n\nvar ModalActions = function ModalActions(_ref) {\n  var children = _ref.children;\n  var l = React.Children.toArray(children).length;\n  return React.createElement(Box, {\n    alignItems: \"center\",\n    height: 96,\n    justifyContent: \"flex-end\",\n    paddingHorizontal: 4,\n    row: true\n  }, React.Children.map(children, function (child, i) {\n    return React.createElement(Fragment, null, child, i < l - 1 && React.createElement(Spacer, null));\n  }));\n};\n\nvar ModalContent = function ModalContent(_ref) {\n  var children = _ref.children;\n  return React.createElement(Box, {\n    column: true,\n    padding: 4\n  }, children);\n};\n\nfunction _templateObject$c() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 24px;\\n  font-weight: 700;\\n  justify-content: center;\\n  margin-bottom: \", \"px;\\n\"]);\n\n  _templateObject$c = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar ModalTitle = function ModalTitle(_ref) {\n  var text = _ref.text;\n  return React.createElement(Box, {\n    padding: 4\n  }, React.createElement(StyledModalTitle, null, text), React.createElement(Separator, null));\n};\n\nvar StyledModalTitle = styled.div(_templateObject$c(), function (props) {\n  return props.theme.spacing[4];\n});\n\nvar Notice = function Notice(_ref) {\n  var children = _ref.children,\n      isHidden = _ref.isHidden,\n      onDismiss = _ref.onDismiss;\n\n  var _useState = useState(isHidden),\n      hidden = _useState[0],\n      setHidden = _useState[1];\n\n  var handleDismissClick = useCallback(function () {\n    setHidden(true);\n    onDismiss && onDismiss();\n  }, [onDismiss, setHidden]);\n  useEffect(function () {\n    setHidden(isHidden);\n  }, [isHidden, setHidden]);\n  return React.createElement(Fragment, null, !hidden && React.createElement(Surface, null, React.createElement(Box, {\n    alignItems: \"center\",\n    padding: 4,\n    row: true\n  }, children, React.createElement(Button, {\n    onClick: handleDismissClick,\n    round: true,\n    size: \"sm\",\n    variant: \"tertiary\"\n  }, React.createElement(Close, null)))));\n};\n\nvar NoticeContent = function NoticeContent(_ref) {\n  var children = _ref.children;\n  return React.createElement(Box, {\n    flex: 1,\n    paddingHorizontal: 3\n  }, children);\n};\n\nfunction _templateObject$d() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-size: 32px;\\n\"]);\n\n  _templateObject$d = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar NoticeIcon = function NoticeIcon(_ref) {\n  var children = _ref.children;\n  return React.createElement(StyledIcon, null, children);\n};\n\nvar StyledIcon = styled.span.attrs({\n  role: 'img'\n})(_templateObject$d());\n\nvar Switch = function Switch(_ref) {\n  var children = _ref.children;\n  var l = React.Children.toArray(children).length;\n  return React.createElement(Surface, {\n    elevation: \"N2\"\n  }, React.createElement(Box, {\n    padding: 2,\n    row: true\n  }, React.Children.map(children, function (child, i) {\n    return React.createElement(Fragment, null, child, i < l - 1 && React.createElement(Spacer, {\n      size: \"sm\"\n    }));\n  })));\n};\n\nfunction _templateObject$e() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  background: \", \";\\n  border: 0;\\n  border-radius: \", \"px;\\n  box-shadow: \", \";\\n  box-sizing: border-box;\\n  color: \", \";\\n  cursor: pointer;\\n  display: flex;\\n  flex: 1;\\n  font-size: \", \"px;\\n  font-weight: 700;\\n  height: \", \"px;\\n  justify-content: center;\\n  margin: -2px 0 0;\\n  min-width: \", \"px;\\n  outline: none;\\n  padding: 0;\\n  width: 100%;\\n\"]);\n\n  _templateObject$e = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar SwitchButton = function SwitchButton(_ref) {\n  var active = _ref.active,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      round = _ref.round,\n      size = _ref.size,\n      text = _ref.text;\n  var _useContext$theme = useContext(ThemeContext).theme,\n      baseBg = _useContext$theme.baseBg,\n      buttonSizes = _useContext$theme.buttonSizes,\n      surfaces = _useContext$theme.surfaces;\n  var boxShadow;\n  var fontSize;\n\n  switch (size) {\n    case 'lg':\n      boxShadow = \"\" + surfaces[1].shadow;\n      fontSize = 16;\n      break;\n\n    case 'sm':\n      boxShadow = \"\" + surfaces[1].shadow;\n      fontSize = 14;\n      break;\n\n    default:\n      boxShadow = \"\" + surfaces[1].shadow;\n      fontSize = 16;\n  }\n\n  var background;\n\n  if (active) {\n    background = baseBg;\n  } else {\n    background = 'transparent';\n  }\n\n  return React.createElement(StyledSwitchButton, {\n    active: active,\n    background: background,\n    boxShadow: boxShadow,\n    fontSize: fontSize,\n    round: round,\n    size: buttonSizes.sm,\n    onClick: onClick\n  }, children, text);\n};\n\nvar StyledSwitchButton = styled.button(_templateObject$e(), function (props) {\n  return props.background;\n}, function (props) {\n  return props.theme.borderRadius;\n}, function (props) {\n  return props.active ? props.boxShadow : undefined;\n}, function (props) {\n  return props.active ? props.theme.colors.primary.main : \"\" + props.theme.textColor;\n}, function (props) {\n  return props.fontSize;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n});\nexport { Box, Button, Card, CardActions, CardContent, CardIcon, CardTitle, Close as CloseIcon, Container, Emoji, Input, Modal, ModalActions, ModalContent, ModalTitle, Notice, NoticeContent, NoticeIcon, Separator, Spacer, Surface, Switch, SwitchButton, ThemeContext, ThemeProvider, createTheme, useTheme };","map":null,"metadata":{},"sourceType":"module"}