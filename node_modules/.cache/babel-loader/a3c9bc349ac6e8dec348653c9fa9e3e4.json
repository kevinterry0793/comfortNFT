{"ast":null,"code":"import _objectSpread from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWallet}from'use-wallet';import{getAddresses}from'constants/tokenAddresses';import Context from'./Context';import{PoolIds}from'constants/poolValues';import useYam from'hooks/useYam';import{addNftStake,burnNft,generateNft,getNftEarned,harvestNfts}from'yam-sdk/utils';import{getUserNfts}from'utils';import Axios from'axios';var Provider=function Provider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmTxModalIsOpen=_useState2[0],setConfirmTxModalIsOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),nftcollection=_useState4[0],setNftCollection=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),oldNftCollection=_useState6[0],setOldNftCollection=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isCreating=_useState8[0],setIsCreating=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isAdding=_useState10[0],setIsAdding=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isLoading=_useState12[0],setIsLoading=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),earnedStrnBalance=_useState14[0],setEarnedStrnBalance=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),strnEthLpPoolBalance=_useState16[0],setStrnEthLpPoolBalance=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),strnXiotLpPoolBalance=_useState18[0],setStrnXiotLpPoolBalance=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isHarvesting=_useState20[0],setIsHarvesting=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),fetchNfts=_useState22[0],setFetchNfts=_useState22[1];var _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),fetchOldNfts=_useState24[0],setFetchOldNfts=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),txHash=_useState26[0],setTxHash=_useState26[1];var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var yam=useYam();var fetchUsersNfts=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(yam,userAddress,provider){var startTime;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(account===undefined||yam===undefined)){_context.next=3;break;}console.log('account, yam',account!==undefined,yam!==undefined);return _context.abrupt(\"return\");case 3:setIsLoading(true);if(txHash)checkTxHashRefreshUserNfts(yam.web3.eth,txHash,setTxHash);if(fetchNfts){startTime=new Date().getTime();setFetchNfts(false);getUserNfts(provider,getAddresses().strainNFTAddress,userAddress,yam.contracts.strain_nft_crafter,yam.contracts.strain_nft_genetics).then(function(nftinstances){var fetchTime=new Date().getTime();console.log(\"NFT fetching took \".concat((fetchTime-startTime)/1000,\" seconds\"));console.log('nftinstances',nftinstances);setNftCollection(nftinstances);// sum up LPs in each pool\nvar strnEthNfts=nftinstances.filter(function(n){return n.poolId===PoolIds.STRN_ETH;}).reduce(function(p,n){return p.plus(n.lpBalance||0);},new BigNumber(0));var strnXiotNfts=nftinstances.filter(function(n){return n.poolId===PoolIds.STRN_XIOT;}).reduce(function(p,n){return p.plus(n.lpBalance||0);},new BigNumber(0));setStrnEthLpPoolBalance(strnEthNfts);setStrnXiotLpPoolBalance(strnXiotNfts);}).catch(function(e){setIsLoading(false);setFetchNfts(true);});}setIsLoading(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2,_x3){return _ref2.apply(this,arguments);};}(),[yam,fetchNfts,txHash]);var fetchOldUsersNfts=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(yam,userAddress,provider){var oldStrainNFTAddress,startTime;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:oldStrainNFTAddress=getAddresses().oldStrainNFTAddress;if(!(account===undefined||yam===undefined)){_context2.next=4;break;}console.log('account, yam',account!==undefined,yam!==undefined);return _context2.abrupt(\"return\");case 4:setIsLoading(true);if(txHash)checkTxHashRefreshUserNfts(yam.web3.eth,txHash,setTxHash);if(fetchOldNfts){startTime=new Date().getTime();setFetchOldNfts(false);getUserNfts(provider,oldStrainNFTAddress,userAddress,yam.contracts.strain_nft_crafter_old,yam.contracts.strain_nft_genetics).then(function(oldNftinstances){var fetchTime=new Date().getTime();console.log(\"Old NFT fetching took \".concat((fetchTime-startTime)/1000,\" seconds\"));console.log('oldNftinstances',oldNftinstances);setOldNftCollection(oldNftinstances);// sum up LPs in each pool\nvar strnEthNfts=oldNftinstances.filter(function(n){return n.poolId===PoolIds.STRN_ETH;}).reduce(function(p,n){return p.plus(n.lpBalance||0);},new BigNumber(0));var strnXiotNfts=oldNftinstances.filter(function(n){return n.poolId===PoolIds.STRN_XIOT;}).reduce(function(p,n){return p.plus(n.lpBalance||0);},new BigNumber(0));setStrnEthLpPoolBalance(strnEthNfts);setStrnXiotLpPoolBalance(strnXiotNfts);}).catch(function(e){setIsLoading(false);setFetchOldNfts(true);});}setIsLoading(false);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5,_x6){return _ref3.apply(this,arguments);};}(),[yam,fetchOldNfts,txHash]);var fetchEarnedBalance=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(yam,account,nftcollection){var nftIds,balance;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(!account||!yam)){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:if(!(!nftcollection||nftcollection.length===0)){_context3.next=4;break;}return _context3.abrupt(\"return\",setEarnedStrnBalance(new BigNumber(0)));case 4:nftIds=nftcollection.map(function(n){return n.nftId;});_context3.next=7;return getNftEarned(yam,yam.contracts.strain_nft_crafter_old,account,nftIds);case 7:balance=_context3.sent;console.log('nft earned balance',String(balance));setEarnedStrnBalance(balance);case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x7,_x8,_x9){return _ref4.apply(this,arguments);};}(),[account,setEarnedStrnBalance,yam,nftcollection]);useEffect(function(){if(account&&ethereum&&yam){fetchUsersNfts(yam,account,ethereum);fetchOldUsersNfts(yam,account,ethereum);var refreshInterval=setInterval(function(){fetchUsersNfts(yam,account,ethereum);fetchOldUsersNfts(yam,account,ethereum);fetchEarnedBalance(yam,account,nftcollection);},10000);return function(){return clearInterval(refreshInterval);};}},[account,ethereum,fetchUsersNfts,fetchOldUsersNfts,yam,nftcollection]);var handleCreateNft=useCallback(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(poolId,amount,name){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(yam){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsCreating(true);_context4.next=6;return generateNft(yam.contracts.strain_nft_crafter,yam.web3.eth,poolId,amount,name,account,function(txHash){setConfirmTxModalIsOpen(false);setTxHash(txHash);}).catch(function(e){console.error(e);setIsCreating(false);});case 6:setIsCreating(false);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x10,_x11,_x12){return _ref5.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,setIsCreating,yam]);var handleAddNftStake=useCallback(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(poolId,nftId,amount,stxpAmount){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(yam){_context6.next=2;break;}return _context6.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsAdding(true);_context6.next=6;return addNftStake(yam.contracts.strain_nft_crafter,yam.web3.eth,poolId,nftId,amount,stxpAmount,account,/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(txHash){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setConfirmTxModalIsOpen(false);setTxHash(txHash);case 2:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x17){return _ref7.apply(this,arguments);};}()).catch(function(e){console.error(e);setIsAdding(false);});case 6:setIsAdding(false);case 7:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x13,_x14,_x15,_x16){return _ref6.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,setIsAdding,yam]);var handleDestroyNft=useCallback(/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(poolId,nft){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(yam){_context7.next=2;break;}return _context7.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);nft.isDestroying=true;_context7.next=6;return burnNft(yam.contracts.strain_nft_crafter,yam.web3.eth,nft.nftId,poolId,account,function(txHash){setConfirmTxModalIsOpen(false);setTxHash(txHash);}).catch(function(e){console.error(e);nft.isDestroying=false;});case 6:nft.isDestroying=false;case 7:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x18,_x19){return _ref8.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,yam]);var handleNftRetrive=useCallback(/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(nft){var promise;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(nft===null||nft===void 0?void 0:nft.dataUrl){_context8.next=2;break;}return _context8.abrupt(\"return\",nft);case 2:Axios.get(nft.dataUrl);promise=Axios.get(nft.dataUrl);return _context8.abrupt(\"return\",promise.then(function(response){return _objectSpread(_objectSpread({},nft),{},{attribs:response.data});}));case 5:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x20){return _ref9.apply(this,arguments);};}(),[]);var handleOldNftRetrive=useCallback(/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(nft){var promise;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(nft===null||nft===void 0?void 0:nft.dataUrl){_context9.next=2;break;}return _context9.abrupt(\"return\",nft);case 2:Axios.get(nft.dataUrl);promise=Axios.get(nft.dataUrl);return _context9.abrupt(\"return\",promise.then(function(response){return _objectSpread(_objectSpread({},nft),{},{attribs:response.data});}));case 5:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x21){return _ref10.apply(this,arguments);};}(),[]);var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){var nftids;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(yam){_context10.next=2;break;}return _context10.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsHarvesting(true);nftids=nftcollection.map(function(nft){return nft.nftId;});if(!(nftids.length===0)){_context10.next=7;break;}return _context10.abrupt(\"return\");case 7:_context10.next=9;return harvestNfts(yam.contracts.strain_nft_crafter,yam.web3.eth,account,nftids,function(){setConfirmTxModalIsOpen(false);}).catch(function(e){console.error(e);});case 9:setIsHarvesting(false);case 10:case\"end\":return _context10.stop();}}},_callee10);})),[account,setConfirmTxModalIsOpen,setIsHarvesting,yam,nftcollection]);var checkTxHashRefreshUserNfts=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(provider,txHash,setTxHash){var receipt;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return provider.getTransactionReceipt(txHash);case 2:receipt=_context11.sent;if(receipt!==null){setTimeout(setFetchNfts(true),5000);setTxHash('');}case 4:case\"end\":return _context11.stop();}}},_callee11);}));return function checkTxHashRefreshUserNfts(_x22,_x23,_x24){return _ref12.apply(this,arguments);};}();var findNftById=function findNftById(nftId){return nftcollection.find(function(n){return n.nftId===nftId;});};return/*#__PURE__*/React.createElement(Context.Provider,{value:{setConfirmTxModalIsOpen:setConfirmTxModalIsOpen,strainNftCollection:nftcollection,onDestroyNft:handleDestroyNft,onRetrieve:handleNftRetrive,onRetrieveOld:handleOldNftRetrive,onCreateNft:handleCreateNft,onHarvest:handleHarvest,onAddNftStake:handleAddNftStake,earnedStrnBalance:earnedStrnBalance,isCreating:isCreating,isAdding:isAdding,isLoading:isLoading,isHarvesting:isHarvesting,strnEthLpPoolBalance:strnEthLpPoolBalance,strnXiotLpPoolBalance:strnXiotLpPoolBalance,findNftById:findNftById,oldStrainNftCollection:oldNftCollection}},children);};export default Provider;","map":null,"metadata":{},"sourceType":"module"}