{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/components/ConfirmTransactionModal/ConfirmTransactionModal.tsx\";\nimport React, { useMemo } from 'react';\nimport { Modal, ModalContent, Spacer } from 'react-neu';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport metamaskLogo from \"assets/metamask-fox.svg\";\nimport walletConnectLogo from \"assets/wallet-connect.svg\";\n\nconst ConfirmTransactionModal = ({\n  isOpen\n}) => {\n  const {\n    connector\n  } = useWallet();\n  const WalletLogo = useMemo(() => {\n    if (connector === 'injected') {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: metamaskLogo,\n        height: 96,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      });\n    } else if (connector === 'walletconnect') {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: walletConnectLogo,\n        height: 72,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }\n      });\n    }\n  }, [connector]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, WalletLogo, /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StyledText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Confirm transaction in wallet.\")));\n};\n\nconst StyledText = styled.div`\n  font-size: 24px;\n  text-align: center;\n`;\nexport default ConfirmTransactionModal;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/components/ConfirmTransactionModal/ConfirmTransactionModal.tsx"],"names":["React","useMemo","Modal","ModalContent","Spacer","styled","useWallet","ConfirmTransactionModal","isOpen","connector","WalletLogo","metamaskLogo","walletConnectLogo","StyledText","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SACEC,KADF,EAEEC,YAFF,EAIEC,MAJF,QAKO,WALP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;;AAKA,MAAMC,uBAA6C,GAAG,CAAC;AACrDC,EAAAA;AADqD,CAAD,KAEhD;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,SAAS,EAA/B;AAEA,QAAMI,UAAU,GAAGT,OAAO,CAAC,MAAM;AAC/B,QAAIQ,SAAS,KAAK,UAAlB,EAA8B;AAC5B,0BAAO;AAAK,QAAA,GAAG,EAAEE,YAAV;AAAwB,QAAA,MAAM,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIF,SAAS,KAAK,eAAlB,EAAmC;AACxC,0BAAO;AAAK,QAAA,GAAG,EAAEG,iBAAV;AAA6B,QAAA,MAAM,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GANyB,EAMvB,CAACH,SAAD,CANuB,CAA1B;AAQA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UADH,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,CADF,CADF;AASD,CAtBD;;AAwBA,MAAMG,UAAU,GAAGR,MAAM,CAACS,GAAI;AAC9B;AACA;AACA,CAHA;AAKA,eAAeP,uBAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport {\n  Modal,\n  ModalContent,\n  ModalProps,\n  Spacer,\n} from 'react-neu'\nimport styled from 'styled-components'\nimport { useWallet } from 'use-wallet'\n\nimport metamaskLogo from 'assets/metamask-fox.svg'\nimport walletConnectLogo from 'assets/wallet-connect.svg'\n\nconst ConfirmTransactionModal: React.FC<ModalProps> = ({\n  isOpen,\n}) => {\n  const { connector } = useWallet()\n\n  const WalletLogo = useMemo(() => {\n    if (connector === 'injected') {\n      return <img src={metamaskLogo} height={96} />\n    } else if (connector === 'walletconnect') {\n      return <img src={walletConnectLogo} height={72} />\n    }\n  }, [connector])\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalContent>\n        {WalletLogo}\n        <Spacer />\n        <StyledText>Confirm transaction in wallet.</StyledText>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst StyledText = styled.div`\n  font-size: 24px;\n  text-align: center;\n`\n\nexport default ConfirmTransactionModal"]},"metadata":{},"sourceType":"module"}