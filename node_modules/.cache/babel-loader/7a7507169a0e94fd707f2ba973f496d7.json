{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWallet}from'use-wallet';import ConfirmTransactionModal from'components/ConfirmTransactionModal';import{getAddresses}from'constants/tokenAddresses';import useYam from'hooks/useYam';import{getExitableAmount,getSingleEarned,getSingleStakeBalances,getSingleStakingEndTime,singleExit,stxpSingleHarvest,stxpSingleRedeem,stxpSingleStake}from'yam-sdk/utils';import Context from'./Context';var addresses=getAddresses();var Provider=function Provider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmTxModalIsOpen=_useState2[0],setConfirmTxModalIsOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isHarvesting=_useState4[0],setIsHarvesting=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isRedeeming=_useState6[0],setIsRedeeming=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isStaking=_useState8[0],setIsStaking=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isUnstaking=_useState10[0],setIsUnstaking=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),totalStaked=_useState12[0],setTotakStaked=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),earnedStxpPoolBalance=_useState14[0],setEarnedStxpPoolBalance=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),userStakes=_useState16[0],setUserStakes=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),withdrawStakeAmount=_useState18[0],setWithdrawStakeAmount=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),endTime=_useState20[0],setEndTime=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),lastExpiringStake=_useState22[0],setLastExpiringStake=_useState22[1];var yam=useYam();var _useWallet=useWallet(),account=_useWallet.account;var getIncentivizerAddress=function getIncentivizerAddress(){return addresses.strnEthIncAddress;};var fetchStakedBalance=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var exitableAmount,stakes,totalStaked,current,_lastExpiringStake;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!account||!yam)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return getExitableAmount(yam.contracts.stxpInc_pool,account);case 4:exitableAmount=_context.sent;setWithdrawStakeAmount(new BigNumber(String(exitableAmount)).dividedBy(new BigNumber(10).pow(18)));_context.next=8;return getSingleStakeBalances(yam.contracts.stxpInc_pool,account);case 8:stakes=_context.sent;totalStaked=stakes.reduce(function(p,s){return p.plus(s.amount);},new BigNumber(0));setTotakStaked(totalStaked);setUserStakes(stakes);if(stakes&&stakes.length>0){current=new Date().getTime()/1000;_lastExpiringStake=stakes.filter(function(s){return s.lockDate>current;}).sort(function(a,b){return Number(a.lockDate)<Number(b.lockDate)?1:-1;});if(_lastExpiringStake&&_lastExpiringStake.length>0){setLastExpiringStake(_lastExpiringStake[0]);}else{setLastExpiringStake(undefined);}}case 13:case\"end\":return _context.stop();}}},_callee);})),[account,setTotakStaked,setUserStakes,yam]);var fetchEarnedBalance=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var balance;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!account||!yam)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:_context2.next=4;return getSingleEarned(yam,yam.contracts.stxpInc_pool,account);case 4:balance=_context2.sent;setEarnedStxpPoolBalance(balance);case 6:case\"end\":return _context2.stop();}}},_callee2);})),[account,setEarnedStxpPoolBalance,yam]);var fetchBalances=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fetchEarnedBalance();fetchStakedBalance();case 2:case\"end\":return _context3.stop();}}},_callee3);})),[fetchEarnedBalance,fetchStakedBalance]);var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(yam){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsHarvesting(true);_context4.next=6;return stxpSingleHarvest(yam.contracts.stxpInc_pool,yam.web3.eth,account,function(){setConfirmTxModalIsOpen(false);}).catch(function(e){console.error(e);});case 6:setIsHarvesting(false);case 7:case\"end\":return _context4.stop();}}},_callee4);})),[account,setConfirmTxModalIsOpen,setIsHarvesting,yam]);// amount is the amount of STRN user wants to exit and will claim all STXP\nvar handleRedeem=useCallback(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(amount){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(yam){_context5.next=2;break;}return _context5.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsRedeeming(true);_context5.next=6;return stxpSingleRedeem(yam.contracts.stxpInc_pool,yam.web3.eth,amount,account,function(){setConfirmTxModalIsOpen(false);}).catch(function(e){console.error(e);setIsRedeeming(false);});case 6:setIsRedeeming(false);case 7:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x){return _ref6.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,setIsRedeeming,yam]);var handleStake=useCallback(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(duration,amount){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:console.log('staking, stake, is yam undefined',yam===undefined);if(yam){_context6.next=3;break;}return _context6.abrupt(\"return\");case 3:setConfirmTxModalIsOpen(true);setIsStaking(true);_context6.next=7;return stxpSingleStake(yam.contracts.stxpInc_pool,yam.web3.eth,duration,amount,account,function(){setConfirmTxModalIsOpen(false);}).catch(function(e){console.error(e);setIsStaking(false);});case 7:setIsStaking(false);case 8:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x2,_x3){return _ref7.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,setIsStaking,yam]);var handleUnstake=useCallback(/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(amount){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(yam){_context7.next=2;break;}return _context7.abrupt(\"return\");case 2:setConfirmTxModalIsOpen(true);setIsUnstaking(true);_context7.next=6;return singleExit(yam.contracts.stxpInc_pool,yam.web3.eth,amount,account,function(){setConfirmTxModalIsOpen(false);}).catch(function(e){console.error(e);setIsUnstaking(false);});case 6:setIsUnstaking(false);case 7:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x4){return _ref8.apply(this,arguments);};}(),[account,setConfirmTxModalIsOpen,setIsUnstaking,yam]);useEffect(function(){if(yam)getSingleStakingEndTime(yam,yam.contracts.stxpInc_pool).then(function(endTime){return setEndTime(endTime);});fetchBalances();var refreshInterval=setInterval(function(){fetchBalances();},10000);return function(){return clearInterval(refreshInterval);};},[fetchBalances,yam]);return/*#__PURE__*/React.createElement(Context.Provider,{value:{setConfirmTxModalIsOpen:setConfirmTxModalIsOpen,earnedStxpPoolBalance:earnedStxpPoolBalance,isHarvesting:isHarvesting,isRedeeming:isRedeeming,isStaking:isStaking,isUnstaking:isUnstaking,onHarvest:handleHarvest,onRedeem:handleRedeem,onStake:handleStake,onUnstake:handleUnstake,getIncentivizerAddress:getIncentivizerAddress,totalStaked:totalStaked,strnTokenAddress:addresses.strnTokenAddress,endTime:endTime,withdrawStakeAmount:withdrawStakeAmount,lastExpiringStake:lastExpiringStake,userStakes:userStakes}},children,/*#__PURE__*/React.createElement(ConfirmTransactionModal,{isOpen:confirmTxModalIsOpen}));};export default Provider;","map":null,"metadata":{},"sourceType":"module"}