{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/contexts/Migration/Provider.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { yamv2 as yamV2Address } from 'constants/tokenAddresses';\nimport useApproval from 'hooks/useApproval';\nimport useYam from 'hooks/useYam';\nimport { migrateV3 } from 'yam-sdk/utils';\nimport ConfirmTransactionModal from 'components/ConfirmTransactionModal';\nimport Context from './Context';\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    account\n  } = useWallet();\n  const yam = useYam();\n  const [isMigrating, setIsMigrating] = useState(false);\n  const [confirmTxModalIsOpen, setConfirmTxModalIsOpen] = useState(false);\n  const {\n    isApproved,\n    isApproving,\n    onApprove\n  } = useApproval(yamV2Address, yam ? yam.contracts.migrator.options.address : undefined, () => setConfirmTxModalIsOpen(false));\n  const handleApprove = useCallback(() => {\n    setConfirmTxModalIsOpen(true);\n    onApprove();\n  }, [onApprove, setConfirmTxModalIsOpen]);\n  const handleMigrationTxSent = useCallback(() => {\n    setIsMigrating(true);\n    setConfirmTxModalIsOpen(false);\n  }, [setIsMigrating, setConfirmTxModalIsOpen]);\n  const handleMigrate = useCallback(async () => {\n    setConfirmTxModalIsOpen(true);\n    await migrateV3(yam, account, handleMigrationTxSent);\n    setIsMigrating(false);\n  }, [account, handleMigrationTxSent, setConfirmTxModalIsOpen, setIsMigrating, yam]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      isApproved,\n      isApproving,\n      onApprove: handleApprove,\n      onMigrate: handleMigrate,\n      isMigrating\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ConfirmTransactionModal, {\n    isOpen: confirmTxModalIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Provider;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/contexts/Migration/Provider.tsx"],"names":["React","useCallback","useState","useWallet","yamv2","yamV2Address","useApproval","useYam","migrateV3","ConfirmTransactionModal","Context","Provider","children","account","yam","isMigrating","setIsMigrating","confirmTxModalIsOpen","setConfirmTxModalIsOpen","isApproved","isApproving","onApprove","contracts","migrator","options","address","undefined","handleApprove","handleMigrationTxSent","handleMigrate","onMigrate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,0BAAtC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAMW,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACe,oBAAD,EAAuBC,uBAAvB,IAAkDhB,QAAQ,CAAC,KAAD,CAAhE;AAEA,QAAM;AAAEiB,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAAyCf,WAAW,CACxDD,YADwD,EAExDS,GAAG,GAAGA,GAAG,CAACQ,SAAJ,CAAcC,QAAd,CAAuBC,OAAvB,CAA+BC,OAAlC,GAA4CC,SAFS,EAGxD,MAAMR,uBAAuB,CAAC,KAAD,CAH2B,CAA1D;AAMA,QAAMS,aAAa,GAAG1B,WAAW,CAAC,MAAM;AACtCiB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAG,IAAAA,SAAS;AACV,GAHgC,EAG9B,CACDA,SADC,EAEDH,uBAFC,CAH8B,CAAjC;AAQA,QAAMU,qBAAqB,GAAG3B,WAAW,CAAC,MAAM;AAC9Ce,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,GAHwC,EAGtC,CACDF,cADC,EAEDE,uBAFC,CAHsC,CAAzC;AAQA,QAAMW,aAAa,GAAG5B,WAAW,CAAC,YAAY;AAC5CiB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA,UAAMV,SAAS,CAACM,GAAD,EAAMD,OAAN,EAAee,qBAAf,CAAf;AACAZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJgC,EAI9B,CACDH,OADC,EAEDe,qBAFC,EAGDV,uBAHC,EAIDF,cAJC,EAKDF,GALC,CAJ8B,CAAjC;AAYA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBK,MAAAA,UADuB;AAEvBC,MAAAA,WAFuB;AAGvBC,MAAAA,SAAS,EAAEM,aAHY;AAIvBG,MAAAA,SAAS,EAAED,aAJY;AAKvBd,MAAAA;AALuB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,QAPH,eAQE,oBAAC,uBAAD;AAAyB,IAAA,MAAM,EAAEK,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CApDD;;AAsDA,eAAeN,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { useWallet } from 'use-wallet'\n\nimport { yamv2 as yamV2Address } from 'constants/tokenAddresses'\nimport useApproval from 'hooks/useApproval'\nimport useYam from 'hooks/useYam'\nimport { migrateV3 } from 'yam-sdk/utils'\n\nimport ConfirmTransactionModal from 'components/ConfirmTransactionModal'\n\nimport Context from './Context'\n\nconst Provider: React.FC = ({ children }) => {\n  const { account } = useWallet()\n  const yam = useYam()\n  const [isMigrating, setIsMigrating] = useState(false)\n  const [confirmTxModalIsOpen, setConfirmTxModalIsOpen] = useState(false)\n\n  const { isApproved, isApproving, onApprove } = useApproval(\n    yamV2Address,\n    yam ? yam.contracts.migrator.options.address : undefined,\n    () => setConfirmTxModalIsOpen(false)\n  )\n\n  const handleApprove = useCallback(() => {\n    setConfirmTxModalIsOpen(true)\n    onApprove()\n  }, [\n    onApprove,\n    setConfirmTxModalIsOpen,\n  ])\n\n  const handleMigrationTxSent = useCallback(() => {\n    setIsMigrating(true)\n    setConfirmTxModalIsOpen(false)\n  }, [\n    setIsMigrating,\n    setConfirmTxModalIsOpen\n  ])\n\n  const handleMigrate = useCallback(async () => {\n    setConfirmTxModalIsOpen(true)\n    await migrateV3(yam, account, handleMigrationTxSent)\n    setIsMigrating(false)\n  }, [\n    account,\n    handleMigrationTxSent,\n    setConfirmTxModalIsOpen,\n    setIsMigrating,\n    yam\n  ])\n\n  return (\n    <Context.Provider value={{\n      isApproved,\n      isApproving,\n      onApprove: handleApprove,\n      onMigrate: handleMigrate,\n      isMigrating,\n    }}>\n      {children}\n      <ConfirmTransactionModal isOpen={confirmTxModalIsOpen} />\n    </Context.Provider>\n  )\n}\n\nexport default Provider\n"]},"metadata":{},"sourceType":"module"}