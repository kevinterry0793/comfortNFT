{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/views/Modals/AdditionalStakeModal.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { Button, Modal, ModalActions, ModalContent, ModalTitle } from 'react-neu';\nimport TokenInput from 'components/TokenInput';\nimport styled from 'styled-components';\n\nconst AdditionalStakeModal = ({\n  isOpen,\n  onDismiss,\n  onAddStake,\n  label,\n  fullBalance\n}) => {\n  const [val, setVal] = useState('');\n  const [hasBalanceError, setHasBalanceError] = useState(false);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n    setHasBalanceError(new BigNumber(e.currentTarget.value || 0).eq(0));\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(String(fullBalance || 0));\n    setHasBalanceError(new BigNumber(fullBalance || 0).eq(0));\n  }, [fullBalance, setVal]);\n  const handleAddStakeClick = useCallback(() => {\n    onAddStake(val, \"0\");\n  }, [onAddStake, val]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: \"Add Stake to NFT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TokenInput, {\n    value: val,\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    max: String(fullBalance || 0),\n    symbol: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), hasBalanceError && /*#__PURE__*/React.createElement(ErrorLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, `No LP tokens found for ${label}`)), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onDismiss,\n    text: \"Cancel\",\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !val || !Number(val) || hasBalanceError,\n    onClick: handleAddStakeClick,\n    text: \"Add Stake\",\n    variant: !val || !Number(val) ? 'secondary' : 'default',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst StyledDivContainer = styled.div`\n    input {\n        width: 150px;\n    }\n`;\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\nconst StyledTokenSymbol = styled.span`\n  color: ${props => props.theme.colors.grey[600]};\n  font-weight: 700;\n`;\nconst StyledSpacer = styled.div`\n  width: ${props => props.theme.spacing[3]}px;\n`;\nconst ErrorLabel = styled.div`\n  color: #ff0000;\n`;\nexport default AdditionalStakeModal;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/views/Modals/AdditionalStakeModal.tsx"],"names":["React","useCallback","useState","BigNumber","Button","Modal","ModalActions","ModalContent","ModalTitle","TokenInput","styled","AdditionalStakeModal","isOpen","onDismiss","onAddStake","label","fullBalance","val","setVal","hasBalanceError","setHasBalanceError","handleChange","e","currentTarget","value","eq","handleSelectMax","String","handleAddStakeClick","Number","StyledDivContainer","div","StyledTokenAdornmentWrapper","StyledTokenSymbol","span","props","theme","colors","grey","StyledSpacer","spacing","ErrorLabel"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalActions,\n  ModalContent,\n  ModalProps,\n  ModalTitle,\n} from 'react-neu'\n\nimport TokenInput from 'components/TokenInput'\nimport styled from 'styled-components'\n\ninterface NamedGeneratingModalProps extends ModalProps {\n    onAddStake: (amount: string, stxpAmount: string) => void,\n  label: string,\n  fullBalance?: BigNumber,\n}\n\nconst AdditionalStakeModal: React.FC<NamedGeneratingModalProps> = ({\n  isOpen,\n  onDismiss,\n  onAddStake,\n  label,\n  fullBalance,\n}) => {\n\n  const [val, setVal] = useState('')\n  const [hasBalanceError, setHasBalanceError] = useState(false)\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n    setHasBalanceError(new BigNumber(e.currentTarget.value || 0).eq(0))\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(String(fullBalance || 0))\n    setHasBalanceError(new BigNumber(fullBalance || 0).eq(0))\n  }, [fullBalance, setVal])\n\n  const handleAddStakeClick = useCallback(() => {\n    onAddStake(val, \"0\")\n  }, [onAddStake, val])\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalTitle text=\"Add Stake to NFT\" />\n      <ModalContent>\n        {/*<StyledDivContainer>\n          <Input\n            endAdornment={(\n              <StyledTokenAdornmentWrapper>\n                <StyledTokenSymbol>{ }</StyledTokenSymbol>\n                <StyledSpacer />\n              </StyledTokenAdornmentWrapper>\n            )}\n            onChange={handleNameChange}\n            placeholder=\"Name your NFT (Required)\"\n            value={name}\n          />\n            </StyledDivContainer>*/}\n        <TokenInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={String(fullBalance || 0)}\n          symbol={label}\n        />\n        {hasBalanceError &&\n          <ErrorLabel>\n            {`No LP tokens found for ${label}`}\n          </ErrorLabel>\n        }\n      </ModalContent>\n      <ModalActions>\n        <Button\n          onClick={onDismiss}\n          text=\"Cancel\"\n          variant=\"secondary\"\n        />\n        <Button\n          disabled={!val || !Number(val) || hasBalanceError}\n          onClick={handleAddStakeClick}\n          text=\"Add Stake\"\n          variant={!val || !Number(val) ? 'secondary' : 'default'}\n        />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst StyledDivContainer = styled.div`\n    input {\n        width: 150px;\n    }\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${props => props.theme.colors.grey[600]};\n  font-weight: 700;\n`\n\nconst StyledSpacer = styled.div`\n  width: ${props => props.theme.spacing[3]}px;\n`\n\nconst ErrorLabel = styled.div`\n  color: #ff0000;\n`\n\nexport default AdditionalStakeModal"]},"metadata":{},"sourceType":"module"}