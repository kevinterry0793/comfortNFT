{"ast":null,"code":"import _slicedToArray from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useMemo,useState}from'react';import{Box,Button,Card,CardActions,CardContent,CardIcon,Container,Spacer}from'react-neu';import{useWallet}from'use-wallet';import Label from'components/Label';import Value from'components/Value';import numeral from'numeral';import DurationStakeModal from'views/Modals/DurationStakeModal';import UnstakeModal from'views/Modals/UnstakeModal';import useApproval from'hooks/useApproval';import useBalances from'hooks/useBalances';import SplitRow from'components/SplitRow';import{StyledSubtitle}from'components/PageHeader/PageHeader';import useStaking from'hooks/useStaking';import BigNumber from'bignumber.js';import{bnToDec}from'utils';import{getDaysRemaining,getHoursMinusDaysRemaining,getMinutesMinusHoursRemaining,getSecondsMinusMinutesRemaining,useTimer}from'hooks/useTimer';var SingleStake=function SingleStake(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stakeModalIsOpen=_useState2[0],setStakeModalIsOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),unstakeModalIsOpen=_useState4[0],setUnstakeModalIsOpen=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),unlockTimer=_useState6[0],setUnlockTimer=_useState6[1];var _useWallet=useWallet(),status=_useWallet.status;var _useStaking=useStaking(),strnTokenAddress=_useStaking.strnTokenAddress,setConfirmTxModalIsOpen=_useStaking.setConfirmTxModalIsOpen,isStaking=_useStaking.isStaking,isUnstaking=_useStaking.isUnstaking,onStake=_useStaking.onStake,onUnstake=_useStaking.onUnstake,getIncentivizerAddress=_useStaking.getIncentivizerAddress,totalStaked=_useStaking.totalStaked,endTime=_useStaking.endTime,withdrawStakeAmount=_useStaking.withdrawStakeAmount,lastExpiringStake=_useStaking.lastExpiringStake,userStakes=_useStaking.userStakes;var _useBalances=useBalances(),strnTokenBalance=_useBalances.strnTokenBalance;var currentTime=useTimer();var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disableStaking=_useState8[0],setDisableStaking=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),disableUnstaking=_useState10[0],setDisableUnstaking=_useState10[1];var _useApproval=useApproval(strnTokenAddress,getIncentivizerAddress(),function(){return setConfirmTxModalIsOpen(false);}),isApproved=_useApproval.isApproved,isApproving=_useApproval.isApproving,onApprove=_useApproval.onApprove;var handleApprove=useCallback(function(){setConfirmTxModalIsOpen(true);onApprove();},[onApprove,setConfirmTxModalIsOpen]);useEffect(function(){if(lastExpiringStake&&lastExpiringStake.lockDate&&currentTime){var daysRemaining=getDaysRemaining(lastExpiringStake.lockDate,currentTime);var hoursRemaining=getHoursMinusDaysRemaining(lastExpiringStake.lockDate,currentTime);var minutesRemaining=getMinutesMinusHoursRemaining(lastExpiringStake.lockDate,currentTime);var secondsRemaining=getSecondsMinusMinutesRemaining(lastExpiringStake.lockDate,currentTime);setUnlockTimer(\"\".concat(daysRemaining,\"d \").concat(hoursRemaining,\"h \").concat(minutesRemaining,\"m \").concat(secondsRemaining,\"s\"));}else{setUnlockTimer(undefined);}},[lastExpiringStake,currentTime]);useEffect(function(){if(userStakes){// 1. if any stake with amount == 0 and lockDate > 0 disable stake button\nvar disableStakeButton=userStakes.filter(function(s){return new BigNumber(s.amount).gt(0)&&new BigNumber(s.lockDate).gt(0);});var hasUnstaked=userStakes.filter(function(s){return new BigNumber(s.amount).eq(0);});setDisableStaking(disableStakeButton.length>0||hasUnstaked.length>0);// 2. if any stake lockDate > currentTime disable unstake button. \nvar disableUnstakButton=userStakes.filter(function(s){return new BigNumber(s.lockDate).gt(new BigNumber(currentTime));});setDisableUnstaking(disableUnstakButton.length>0);}},[userStakes]);var handleDismissStakeModal=useCallback(function(){setStakeModalIsOpen(false);},[setStakeModalIsOpen]);var handleDismissUnstakeModal=useCallback(function(){setUnstakeModalIsOpen(false);},[setUnstakeModalIsOpen]);var handleOnStake=useCallback(function(duration,amount){onStake(duration,amount);handleDismissStakeModal();},[handleDismissStakeModal,onStake]);var handleOnUnstake=useCallback(function(amount){onUnstake(amount);handleDismissUnstakeModal();},[handleDismissUnstakeModal,onUnstake]);var handleStakeClick=useCallback(function(){setStakeModalIsOpen(true);},[setStakeModalIsOpen]);var handleUnstakeClick=useCallback(function(){setUnstakeModalIsOpen(true);},[setUnstakeModalIsOpen]);var StakeButton=useMemo(function(){if(status!=='connected'||disableStaking){return/*#__PURE__*/React.createElement(Button,{disabled:true,full:true,text:\"Stake\",variant:\"secondary\"});}if(isStaking){return/*#__PURE__*/React.createElement(Button,{disabled:true,full:true,text:\"Staking...\",variant:\"secondary\"});}if(!isApproved){return/*#__PURE__*/React.createElement(Button,{disabled:isApproving,full:true,onClick:handleApprove,text:!isApproving?\"Approve staking\":\"Approving staking...\",variant:isApproving||status!=='connected'?'secondary':'default'});}if(isApproved){return/*#__PURE__*/React.createElement(Button,{full:true,onClick:handleStakeClick,text:\"Stake\"});}},[handleStakeClick,isApproving,isStaking,handleApprove,status]);var UnstakeButton=useMemo(function(){if(status!=='connected'||disableUnstaking||withdrawStakeAmount&&withdrawStakeAmount.eq(0)){return/*#__PURE__*/React.createElement(Button,{disabled:true,full:true,text:\"Unstake\",variant:\"secondary\"});}if(isUnstaking){return/*#__PURE__*/React.createElement(Button,{disabled:true,full:true,text:\"Unstaking...\",variant:\"secondary\"});}return/*#__PURE__*/React.createElement(Button,{full:true,onClick:handleUnstakeClick,text:\"Unstake\",variant:\"secondary\"});},[handleUnstakeClick,isApproving,isUnstaking,handleApprove,status,withdrawStakeAmount]);var getDisplayBalance=useCallback(function(value){if(value){return numeral(value).format('0.00a');}else{return'--';}},[]);var getDisplayTotalBalance=useCallback(function(value){if(value){return numeral(bnToDec(value)).format('0.00a');}else{return'--';}},[]);var showDurationModal=useMemo(function(){return stakeModalIsOpen?/*#__PURE__*/React.createElement(DurationStakeModal,{isOpen:stakeModalIsOpen,onDismiss:handleDismissStakeModal,onStake:handleOnStake,label:'STRN',fullBalance:strnTokenBalance,maxTimestamp:endTime}):null;},[stakeModalIsOpen,strnTokenBalance,endTime]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Container,{size:\"sm\"},/*#__PURE__*/React.createElement(Spacer,null),/*#__PURE__*/React.createElement(StyledSubtitle,null,\"Stake STRN\")),/*#__PURE__*/React.createElement(CardIcon,null,\"\\uD83E\\uDDEC\"),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Box,{alignItems:\"center\",row:true},/*#__PURE__*/React.createElement(SplitRow,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Value,{value:getDisplayTotalBalance(totalStaked)}),/*#__PURE__*/React.createElement(Label,{text:\"Staked\"})),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Value,{value:getDisplayBalance(strnTokenBalance)}),/*#__PURE__*/React.createElement(Label,{text:\"Wallet\"})))),/*#__PURE__*/React.createElement(Box,{alignItems:\"center\",row:true},/*#__PURE__*/React.createElement(SplitRow,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Value,{value:unlockTimer?unlockTimer:'--'}),/*#__PURE__*/React.createElement(Label,{text:\"unstake after last stake unlocks\"})))),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Value,{value:getDisplayBalance(withdrawStakeAmount)}),/*#__PURE__*/React.createElement(Label,{text:\"unstakeable\"})))),/*#__PURE__*/React.createElement(CardActions,null,UnstakeButton,StakeButton)),showDurationModal,/*#__PURE__*/React.createElement(UnstakeModal,{isOpen:unstakeModalIsOpen,onDismiss:handleDismissUnstakeModal,onUnstake:handleOnUnstake,label:'STRN',fullBalance:withdrawStakeAmount,disableUnstaking:true}));};export default SingleStake;","map":null,"metadata":{},"sourceType":"module"}