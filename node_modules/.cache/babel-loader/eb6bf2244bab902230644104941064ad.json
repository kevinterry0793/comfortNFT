{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWallet}from'use-wallet';import{getAllowance}from'utils';var useAllowance=function useAllowance(tokenAddress,spenderAddress){var _useState=useState(),_useState2=_slicedToArray(_useState,2),allowance=_useState2[0],setAllowance=_useState2[1];var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var fetchAllowance=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAddress,provider){var allowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!spenderAddress||!tokenAddress)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return getAllowance(userAddress,spenderAddress,tokenAddress,provider);case 4:allowance=_context.sent;setAllowance(new BigNumber(allowance));case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),[setAllowance,spenderAddress,tokenAddress]);useEffect(function(){if(account&&ethereum&&spenderAddress&&tokenAddress){fetchAllowance(account,ethereum);}var refreshInterval=setInterval(fetchAllowance,10000);return function(){return clearInterval(refreshInterval);};},[account,ethereum,spenderAddress,tokenAddress]);return allowance;};export default useAllowance;","map":null,"metadata":{},"sourceType":"module"}