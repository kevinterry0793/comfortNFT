{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/views/Stake/SingleHarvest.tsx\";\nimport React, { useMemo } from 'react';\nimport numeral from 'numeral';\nimport { Box, Button, Card, CardActions, CardContent, CardIcon, Container, Spacer } from 'react-neu';\nimport { useWallet } from 'use-wallet';\nimport Label from 'components/Label';\nimport Value from 'components/Value';\nimport { bnToDec } from 'utils';\nimport { StyledSubtitle } from 'components/PageHeader/PageHeader';\nimport useStaking from 'hooks/useStaking';\n\nconst Harvest = () => {\n  const {\n    earnedStxpPoolBalance,\n    isHarvesting,\n    onHarvest\n  } = useStaking();\n  const {\n    status\n  } = useWallet();\n  const HarvestAction = useMemo(() => {\n    if (status !== 'connected') {\n      return /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        full: true,\n        text: \"Claim\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (!isHarvesting) {\n      return /*#__PURE__*/React.createElement(Button, {\n        full: true,\n        onClick: () => onHarvest(),\n        text: \"Claim\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (isHarvesting) {\n      return /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        full: true,\n        text: \"Claiming...\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      });\n    }\n  }, [String(isHarvesting), onHarvest, status]);\n  const formattedEarnedBalance = useMemo(() => {\n    const balance = earnedStxpPoolBalance;\n\n    if (balance) {\n      return numeral(bnToDec(balance)).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [earnedStxpPoolBalance]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StyledSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Earned COMFP\")), /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"\\uD83C\\uDF6F\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Value, {\n    value: formattedEarnedBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: \"Claimable COMFPs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, HarvestAction));\n};\n\nexport default Harvest;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/views/Stake/SingleHarvest.tsx"],"names":["React","useMemo","numeral","Box","Button","Card","CardActions","CardContent","CardIcon","Container","Spacer","useWallet","Label","Value","bnToDec","StyledSubtitle","useStaking","Harvest","earnedStxpPoolBalance","isHarvesting","onHarvest","status","HarvestAction","String","formattedEarnedBalance","balance","format"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport numeral from 'numeral'\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardIcon,\n  Container,\n  Spacer,\n} from 'react-neu'\nimport { useWallet } from 'use-wallet'\n\nimport Label from 'components/Label'\nimport Value from 'components/Value'\nimport { bnToDec } from 'utils'\nimport { StyledSubtitle } from 'components/PageHeader/PageHeader'\nimport useStaking from 'hooks/useStaking'\n\nconst Harvest: React.FC = () => {\n  const {\n    earnedStxpPoolBalance,\n    isHarvesting,\n    onHarvest,    \n  } = useStaking()\n\n  const { status } = useWallet()\n\n  const HarvestAction = useMemo(() => {\n    if (status !== 'connected') {\n      return (\n        <Button\n          disabled\n          full\n          text=\"Claim\"\n          variant=\"secondary\"\n        />\n      )\n    }\n    if (!isHarvesting) {\n      return (\n        <Button\n          full\n          onClick={() => onHarvest()}\n          text=\"Claim\"\n        />\n      )\n    }\n    if (isHarvesting) {\n      return (\n        <Button\n          disabled\n          full\n          text=\"Claiming...\"\n          variant=\"secondary\"\n        />\n      )\n    }\n  }, [\n    String(isHarvesting),\n    onHarvest,\n    status\n  ])\n\n  const formattedEarnedBalance = useMemo(() => {\n    const balance = earnedStxpPoolBalance\n    if (balance) {\n      return numeral(bnToDec(balance)).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [earnedStxpPoolBalance])\n\n  return (\n    <Card>\n      <Container size=\"sm\">\n        <Spacer />\n        <StyledSubtitle>Earned COMFP</StyledSubtitle>\n      </Container>\n      <CardIcon>üçØ</CardIcon>\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          column\n        >\n          <Value value={formattedEarnedBalance} />\n          <Label text=\"Claimable COMFPs\" />\n        </Box>\n      </CardContent>\n      <CardActions>\n        {HarvestAction}\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default Harvest"]},"metadata":{},"sourceType":"module"}