{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/components/WalletModal/WalletModal.tsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport numeral from 'numeral';\nimport { Box, Button, Modal, ModalActions, ModalContent, ModalTitle, Separator, Spacer } from 'react-neu';\nimport FancyValue from 'components/FancyValue';\nimport Split from 'components/Split';\nimport useBalances from 'hooks/useBalances';\nimport { bnToDec } from 'utils';\nimport useStaking from 'hooks/useStaking';\nimport useStrainNfts from 'hooks/useStrainNfts';\n\nconst WalletModal = ({\n  isOpen,\n  onDismiss\n}) => {\n  const {\n    reset\n  } = useWallet();\n  const {\n    strnEthLpBalance,\n    strnTokenBalance,\n    strnXiotLpBalance,\n    stxpTokenBalance\n  } = useBalances();\n  const {\n    totalStaked,\n    earnedStxpPoolBalance\n  } = useStaking();\n  const {\n    earnedStrnBalance,\n    strnEthLpPoolBalance,\n    strnXiotLpPoolBalance\n  } = useStrainNfts();\n  const getDisplayBalance = useCallback(value => {\n    if (value) {\n      return numeral(value).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, []);\n  const formattedStrnLPBalance = useMemo(() => {\n    if (strnEthLpBalance) {\n      return numeral(strnEthLpBalance).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [strnXiotLpBalance]);\n  const formattedStrnEthPoolBalance = useMemo(() => {\n    if (strnEthLpPoolBalance) {\n      return numeral(strnEthLpPoolBalance).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [strnEthLpPoolBalance]);\n  const formattedStxpPoolBalance = useMemo(() => {\n    if (earnedStxpPoolBalance) {\n      return numeral(bnToDec(earnedStxpPoolBalance)).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [earnedStxpPoolBalance]);\n  const formattedTotalStakedStrnBalance = useMemo(() => {\n    if (totalStaked) {\n      return numeral(bnToDec(totalStaked)).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [totalStaked]);\n  const formattedStrnXiotLPBalance = useMemo(() => {\n    if (strnXiotLpBalance) {\n      return strnXiotLpBalance.toFixed(8);\n    } else {\n      return '--';\n    }\n  }, [strnXiotLpBalance]);\n  const formattedStrnXiotPoolBalance = useMemo(() => {\n    if (strnXiotLpPoolBalance) {\n      return strnXiotLpPoolBalance.toFixed(8);\n    } else {\n      return '--';\n    }\n  }, [strnXiotLpPoolBalance]);\n  const formattedEarnedBalance = useMemo(() => {\n    if (earnedStrnBalance) {\n      const total = earnedStrnBalance;\n      return numeral(bnToDec(total)).format('0.00a');\n    } else {\n      return '--';\n    }\n  }, [earnedStrnBalance]);\n  const handleSignOut = useCallback(() => {\n    reset();\n  }, [reset]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: \"My Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: \"\\uD83E\\uDDEC\",\n    label: \"STRN balance\",\n    value: getDisplayBalance(strnTokenBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FancyValue, {\n    icon: \"\\uD83C\\uDF6F\",\n    label: \"STXP balance\",\n    value: getDisplayBalance(stxpTokenBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      style: {\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \"LP\"),\n    label: \"STRN/ETH balance\",\n    value: formattedStrnLPBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FancyValue, {\n    icon: /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      style: {\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"LP\"),\n    label: \"STRN/XIOT balance\",\n    value: formattedStrnXiotLPBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: \"\\uD83E\\uDDEC\",\n    label: \"Claimable STRN\",\n    value: formattedEarnedBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      style: {\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"LP\"),\n    label: \"NFT'd STRN/ETH Tokens\",\n    value: formattedStrnEthPoolBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FancyValue, {\n    icon: /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      style: {\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"LP\"),\n    label: \"NFT'd STRN/XIOT Tokens\",\n    value: formattedStrnXiotPoolBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: \"\\uD83C\\uDF6F\",\n    label: \"Claimable STXP\",\n    value: formattedStxpPoolBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FancyValue, {\n    icon: \"\\uD83E\\uDDEC\",\n    label: \"Staked STRN Tokens\",\n    value: formattedTotalStakedStrnBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onDismiss,\n    text: \"Cancel\",\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSignOut,\n    text: \"SignOut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WalletModal;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/components/WalletModal/WalletModal.tsx"],"names":["React","useCallback","useMemo","useWallet","numeral","Box","Button","Modal","ModalActions","ModalContent","ModalTitle","Separator","Spacer","FancyValue","Split","useBalances","bnToDec","useStaking","useStrainNfts","WalletModal","isOpen","onDismiss","reset","strnEthLpBalance","strnTokenBalance","strnXiotLpBalance","stxpTokenBalance","totalStaked","earnedStxpPoolBalance","earnedStrnBalance","strnEthLpPoolBalance","strnXiotLpPoolBalance","getDisplayBalance","value","format","formattedStrnLPBalance","formattedStrnEthPoolBalance","formattedStxpPoolBalance","formattedTotalStakedStrnBalance","formattedStrnXiotLPBalance","toFixed","formattedStrnXiotPoolBalance","formattedEarnedBalance","total","handleSignOut","opacity"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from 'use-wallet'\n\nimport numeral from 'numeral'\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalActions,\n  ModalContent,\n  ModalProps,\n  ModalTitle,\n  Separator,\n  Spacer\n} from 'react-neu'\n\nimport FancyValue from 'components/FancyValue'\nimport Split from 'components/Split'\n\nimport useBalances from 'hooks/useBalances'\nimport { bnToDec } from 'utils'\nimport useStaking from 'hooks/useStaking'\nimport useStrainNfts from 'hooks/useStrainNfts'\n\nconst WalletModal: React.FC<ModalProps> = ({\n  isOpen,\n  onDismiss,\n}) => {\n\n  const { reset } = useWallet()\n  const {\n    strnEthLpBalance,\n    strnTokenBalance,\n    strnXiotLpBalance,\n    stxpTokenBalance,\n  } = useBalances()\n\n  const {\n    totalStaked,\n    earnedStxpPoolBalance\n  } = useStaking()\n\n  const {\n    earnedStrnBalance,\n    strnEthLpPoolBalance,\n    strnXiotLpPoolBalance,\n  } = useStrainNfts()\n\n  const getDisplayBalance = useCallback((value?: BigNumber) => {\n    if (value) {\n      return numeral(value).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [])\n\n  const formattedStrnLPBalance = useMemo(() => {\n    if (strnEthLpBalance) {\n      return numeral(strnEthLpBalance).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [strnXiotLpBalance])\n\n  const formattedStrnEthPoolBalance = useMemo(() => {\n    if (strnEthLpPoolBalance) {\n      return numeral(strnEthLpPoolBalance).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [strnEthLpPoolBalance])\n\n  const formattedStxpPoolBalance = useMemo(() => {\n    if (earnedStxpPoolBalance) {\n      return numeral(bnToDec(earnedStxpPoolBalance)).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [earnedStxpPoolBalance])\n\n  const formattedTotalStakedStrnBalance = useMemo(() => {\n    if (totalStaked) {\n      return numeral(bnToDec(totalStaked)).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [totalStaked])\n\n\n  const formattedStrnXiotLPBalance = useMemo(() => {\n    if (strnXiotLpBalance) {\n      return strnXiotLpBalance.toFixed(8)\n    } else {\n      return '--'\n    }\n  }, [strnXiotLpBalance])\n\n  const formattedStrnXiotPoolBalance = useMemo(() => {\n    if (strnXiotLpPoolBalance) {\n      return strnXiotLpPoolBalance.toFixed(8)\n    } else {\n      return '--'\n    }\n  }, [strnXiotLpPoolBalance])\n\n  const formattedEarnedBalance = useMemo(() => {\n    if (earnedStrnBalance) {\n      const total = earnedStrnBalance\n      return numeral(bnToDec(total)).format('0.00a')\n    } else {\n      return '--'\n    }\n  }, [earnedStrnBalance])\n\n  const handleSignOut = useCallback(() => {\n    reset()\n  }, [reset])\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalTitle text=\"My Wallet\" />\n      <ModalContent>\n        <Split>\n          <Box column>\n            <FancyValue\n              icon=\"🧬\"\n              label=\"STRN balance\"\n              value={getDisplayBalance(strnTokenBalance)}\n            />\n            <Spacer />\n            <FancyValue\n              icon=\"🍯\"\n              label=\"STXP balance\"\n              value={getDisplayBalance(stxpTokenBalance)}\n            />\n          </Box>\n          <Box column>\n            <FancyValue\n              icon={<span role=\"img\" style={{ opacity: 0.5 }} >LP</span>}\n              label=\"STRN/ETH balance\"\n              value={formattedStrnLPBalance}\n            />\n            <Spacer />\n            <FancyValue\n              icon={<span role=\"img\" style={{ opacity: 0.5 }} >LP</span>}\n              label=\"STRN/XIOT balance\"\n              value={formattedStrnXiotLPBalance}\n            />\n          </Box>\n        </Split>\n        <Spacer />\n        <Separator />\n        <Spacer />\n        <Split>\n          <Box column>\n            <FancyValue\n              icon=\"🧬\"\n              label=\"Claimable STRN\"\n              value={formattedEarnedBalance}\n            />\n          </Box>\n          <Box column>\n            <FancyValue\n              icon={<span role=\"img\" style={{ opacity: 0.5 }} >LP</span>}\n              label=\"NFT'd STRN/ETH Tokens\"\n              value={formattedStrnEthPoolBalance}\n            />\n            <Spacer />\n            <FancyValue\n              icon={<span role=\"img\" style={{ opacity: 0.5 }} >LP</span>}\n              label=\"NFT'd STRN/XIOT Tokens\"\n              value={formattedStrnXiotPoolBalance}\n            />\n          </Box>\n        </Split>\n        <Spacer />\n        <Separator />\n        <Spacer />\n        <Split>\n          <Box column>\n            <FancyValue\n              icon=\"🍯\"\n              label=\"Claimable STXP\"\n              value={formattedStxpPoolBalance}\n            />\n          </Box>\n          <Box column>\n            <FancyValue\n              icon=\"🧬\"\n              label=\"Staked STRN Tokens\"\n              value={formattedTotalStakedStrnBalance}\n            />\n          </Box>\n        </Split>\n      </ModalContent>\n      <Separator />\n      <ModalActions>\n        <Button\n          onClick={onDismiss}\n          text=\"Cancel\"\n          variant=\"secondary\"\n        />\n        <Button\n          onClick={handleSignOut}\n          text=\"SignOut\"\n        />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WalletModal"]},"metadata":{},"sourceType":"module"}