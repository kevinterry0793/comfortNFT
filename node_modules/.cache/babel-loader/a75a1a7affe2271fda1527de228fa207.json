{"ast":null,"code":"var _jsxFileName = \"/Users/hienle/Documents/GitHub/comfortNFT/src/views/Greenhouse/components/ApproveButton.tsx\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Spacer } from \"react-neu\";\nimport useApproval from \"hooks/useApproval\";\nimport { useWallet } from \"use-wallet\";\nimport StyledPrimaryButton from \"views/Common/StyledButton\";\n\nconst ApprovalButton = ({\n  tokenAddress,\n  spenderAddress,\n  name,\n  callback\n}) => {\n  const {\n    status\n  } = useWallet();\n  const {\n    isApproved,\n    isApproving,\n    onApprove\n  } = useApproval(tokenAddress, spenderAddress, () => {});\n  const handleApprove = useCallback(() => {\n    onApprove();\n  }, [onApprove]);\n  callback(isApproved); // tell parent if approved\n\n  const ApprovalButton = useMemo(() => {\n    if (status !== \"connected\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledPrimaryButton, {\n        disabled: true,\n        full: true,\n        text: \"Not Connected\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (isApproved) {\n      return null;\n    }\n\n    if (!isApproved) {\n      return /*#__PURE__*/React.createElement(StyledPrimaryButton, {\n        onClick: handleApprove,\n        disabled: isApproved,\n        full: true,\n        size: \"sm\",\n        text: isApproving ? \"Approving ...\" : !isApproved ? `Approve ${name}` : \"Approved\",\n        variant: isApproving || status !== \"connected\" ? \"secondary\" : \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      });\n    }\n  }, [isApproved, isApproving, handleApprove, status, name]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, status !== \"connected\" && /*#__PURE__*/React.createElement(Spacer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 34\n    }\n  }), ApprovalButton);\n};\n\nexport default ApprovalButton;","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/views/Greenhouse/components/ApproveButton.tsx"],"names":["React","useCallback","useMemo","Spacer","useApproval","useWallet","StyledPrimaryButton","ApprovalButton","tokenAddress","spenderAddress","name","callback","status","isApproved","isApproving","onApprove","handleApprove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAwCC,OAAxC,QAAiE,OAAjE;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAGA,OAAOC,WAAP,MAAwB,mBAAxB;AAGA,SAASC,SAAT,QAA0B,YAA1B;AAYA,OAAOC,mBAAP,MAAgC,2BAAhC;;AAGA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,YADsB;AAEtBC,EAAAA,cAFsB;AAGtBC,EAAAA,IAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAUjB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AAEA,QAAM;AACJQ,IAAAA,UADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFX,WAAW,CACbI,YADa,EAEbC,cAFa,EAGb,MAAM,CAAE,CAHK,CAJf;AAUA,QAAMO,aAAa,GAAGf,WAAW,CAAC,MAAM;AACtCc,IAAAA,SAAS;AACV,GAFgC,EAE9B,CAACA,SAAD,CAF8B,CAAjC;AAIAJ,EAAAA,QAAQ,CAACE,UAAD,CAAR,CAjBI,CAiBkB;;AAEtB,QAAMN,cAAc,GAAGL,OAAO,CAAC,MAAM;AACnC,QAAIU,MAAM,KAAK,WAAf,EAA4B;AAC1B,0BACE,uDACE,oBAAC,mBAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,IAAI,EAAE,eAHR;AAIE,QAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;AAED,QAAIC,UAAJ,EAAgB;AACd,aAAO,IAAP;AACD;;AAED,QAAI,CAACA,UAAL,EAAiB;AACf,0BACI,oBAAC,mBAAD;AACE,QAAA,OAAO,EAAEG,aADX;AAEE,QAAA,QAAQ,EAAEH,UAFZ;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,IAAI,EAAE,IAJR;AAKE,QAAA,IAAI,EACFC,WAAW,GACP,eADO,GAEP,CAACD,UAAD,GACC,WAAUH,IAAK,EADhB,GAEA,UAVR;AAYE,QAAA,OAAO,EACLI,WAAW,IAAIF,MAAM,KAAK,WAA1B,GACI,WADJ,GAEI,SAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAoBD;AACF,GAxC6B,EAwC3B,CACDC,UADC,EAEDC,WAFC,EAGDE,aAHC,EAIDJ,MAJC,EAKDF,IALC,CAxC2B,CAA9B;AAgDA,sBACE,0CACGE,MAAM,KAAK,WAAX,iBAA0B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,EAEGL,cAFH,CADF;AAMD,CAnFD;;AAqFA,eAAeA,cAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { Spacer } from \"react-neu\";\n\nimport styled from \"styled-components\";\nimport useApproval from \"hooks/useApproval\";\nimport { getAddresses } from \"constants/tokenAddresses\";\nimport useStrainNfts from \"hooks/useStrainNfts\";\nimport { useWallet } from \"use-wallet\";\nimport {\n  MIN_LP_AMOUNTS,\n  MIN_LP_AMOUNTS_DISPLAY,\n  MIN_STRN_GEN_VALUE,\n  PoolIds,\n  POOL_NAMES,\n} from \"constants/poolValues\";\nimport NamedGeneratingModal from \"views/Modals/NamedGeneratingModal\";\nimport BigNumber from \"bignumber.js\";\nimport numeral from \"numeral\";\nimport Label from \"components/Label\";\nimport StyledPrimaryButton from \"views/Common/StyledButton\";\nimport useBalances from \"hooks/useBalances\";\n\nconst ApprovalButton = ({\n  tokenAddress,\n  spenderAddress,\n  name,\n  callback,\n}: {\n  tokenAddress: string;\n  spenderAddress: string;\n  name: string;\n  callback: Function;\n}) => {\n  const { status } = useWallet();\n\n  const {\n    isApproved,\n    isApproving,\n    onApprove,\n  } = useApproval(\n    tokenAddress,\n    spenderAddress,\n    () => {}\n  );\n\n  const handleApprove = useCallback(() => {\n    onApprove();\n  }, [onApprove]);\n\n  callback(isApproved); // tell parent if approved\n\n  const ApprovalButton = useMemo(() => {\n    if (status !== \"connected\") {\n      return (\n        <>\n          <StyledPrimaryButton\n            disabled\n            full\n            text={\"Not Connected\"}\n            variant=\"secondary\"\n          />\n        </>\n      );\n    }\n\n    if (isApproved) {\n      return null;\n    }\n\n    if (!isApproved) {\n      return (\n          <StyledPrimaryButton\n            onClick={handleApprove}\n            disabled={isApproved}\n            full\n            size={\"sm\"}\n            text={\n              isApproving\n                ? \"Approving ...\"\n                : !isApproved\n                ? `Approve ${name}`\n                : \"Approved\"\n            }\n            variant={\n              isApproving || status !== \"connected\"\n                ? \"secondary\"\n                : \"default\"\n            }\n          />\n      );\n    }\n  }, [\n    isApproved,\n    isApproving,\n    handleApprove,\n    status,\n    name\n  ]);\n\n  return (\n    <>\n      {status !== \"connected\" && <Spacer size=\"sm\" />}\n      {ApprovalButton}\n    </>\n  );\n};\n\nexport default ApprovalButton;\n"]},"metadata":{},"sourceType":"module"}