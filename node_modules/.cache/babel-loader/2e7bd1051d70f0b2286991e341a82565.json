{"ast":null,"code":"import BigNumber from 'bignumber.js/bignumber';\nimport Web3 from 'web3';\nimport * as Types from \"./types.js\";\nimport { SUBTRACT_GAS_LIMIT, addressMap } from './constants.js';\nimport ERC20Json from '../clean_build/contracts/IERC20.json';\nimport YAMv2Json from '../clean_build/contracts/YAMv2.json';\nimport YAMv2MigrationJson from '../clean_build/contracts/YAMv2Migration.json';\nimport YAMJson from '../clean_build/contracts/YAMDelegator.json';\nimport YAMRebaserJson from '../clean_build/contracts/YAMRebaser.json';\nimport YAMReservesJson from '../clean_build/contracts/YAMReserves.json';\nimport YAMGovJson from '../clean_build/contracts/GovernorAlpha.json';\nimport YAMTimelockJson from '../clean_build/contracts/Timelock.json';\nimport WETHJson from './weth.json';\nimport SNXJson from './snx.json';\nimport UNIFactJson from './unifact2.json';\nimport UNIPairJson from './uni2.json';\nimport UNIRouterJson from './uniR.json';\nimport WETHPoolJson from '../clean_build/contracts/YAMETHPool.json';\nimport AMPLPoolJson from '../clean_build/contracts/YAMAMPLPool.json';\nimport YFIPoolJson from '../clean_build/contracts/YAMYFIPool.json';\nimport MKRPoolJson from '../clean_build/contracts/YAMMKRPool.json';\nimport LENDPoolJson from '../clean_build/contracts/YAMLENDPool.json';\nimport COMPPoolJson from '../clean_build/contracts/YAMCOMPPool.json';\nimport SNXPoolJson from '../clean_build/contracts/YAMSNXPool.json';\nimport LINKPoolJson from '../clean_build/contracts/YAMLINKPool.json';\nimport IncOldJson from '../clean_build/contracts/YAMIncentivizerOld.json';\nimport IncJson from '../clean_build/contracts/YAMIncentivizer.json';\nimport StrnEthIncJson from '../clean_build/contracts/STRNIncentivizer.json';\nimport StrnXiotIncJson from '../clean_build/contracts/STRNXIOTIncentivizer.json';\nimport StxpIncentivizer from '../clean_build/contracts/STXPIncentivizer.json';\nimport StrainNFT from '../clean_build/contracts/StrainNFT.json';\nimport StrainNFTCrafter from '../clean_build/contracts/StrainNFTCrafter.json';\nimport StrainNFTCrafterOLD from '../clean_build/contracts/StrainNFTCrafter.json'; // same contract ABI different address hardcoded change below\n\nimport StrainNFTGenetics from '../clean_build/contracts/StrainNFTGenetics.json';\nimport MigratorJson from \"../clean_build/contracts/Migrator.json\";\nimport YAMv3Json from \"../clean_build/contracts/YAMDelegatorV3.json\";\nexport class Contracts {\n  constructor(provider, networkId, web3, options) {\n    this.web3 = web3;\n    this.defaultConfirmations = options.defaultConfirmations;\n    this.autoGasMultiplier = options.autoGasMultiplier || 1.5;\n    this.confirmationType = options.confirmationType || Types.ConfirmationType.Confirmed;\n    this.defaultGas = options.defaultGas;\n    this.defaultGasPrice = options.defaultGasPrice;\n    this.uni_pair = new this.web3.eth.Contract(UNIPairJson);\n    this.uni_router = new this.web3.eth.Contract(UNIRouterJson);\n    this.uni_fact = new this.web3.eth.Contract(UNIFactJson);\n    this.yfi = new this.web3.eth.Contract(ERC20Json.abi);\n    this.UNIAmpl = new this.web3.eth.Contract(ERC20Json.abi);\n    this.ycrv = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yycrv = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam = new this.web3.eth.Contract(YAMJson.abi);\n    this.yfi_pool = new this.web3.eth.Contract(YFIPoolJson.abi);\n    this.eth_pool = new this.web3.eth.Contract(WETHPoolJson.abi);\n    this.ampl_pool = new this.web3.eth.Contract(AMPLPoolJson.abi);\n    this.ycrv_pool = new this.web3.eth.Contract(IncOldJson.abi);\n    this.yycrv_pool = new this.web3.eth.Contract(IncJson.abi); // new STRN incentivizer\n\n    this.strneth_pool = new this.web3.eth.Contract(StrnEthIncJson.abi);\n    this.strnxiot_pool = new this.web3.eth.Contract(StrnXiotIncJson.abi);\n    this.stxpInc_pool = new this.web3.eth.Contract(StxpIncentivizer.abi); // NFT \n\n    this.strain_nft = new this.web3.eth.Contract(StrainNFT.abi);\n    this.strain_nft_crafter = new this.web3.eth.Contract(StrainNFTCrafter.abi); // j00lz hack for burn nfts page\n\n    StrainNFTCrafterOLD.networks[1].address = \"0xCbb9fA9b7b3d70231B4aD1C6819D6251d612b116\";\n    this.strain_nft_crafter_old = new this.web3.eth.Contract(StrainNFTCrafterOLD.abi);\n    this.strain_nft_genetics = new this.web3.eth.Contract(StrainNFTGenetics.abi);\n    this.comp_pool = new this.web3.eth.Contract(COMPPoolJson.abi);\n    this.link_pool = new this.web3.eth.Contract(LINKPoolJson.abi);\n    this.lend_pool = new this.web3.eth.Contract(LENDPoolJson.abi);\n    this.snx_pool = new this.web3.eth.Contract(SNXPoolJson.abi);\n    this.mkr_pool = new this.web3.eth.Contract(MKRPoolJson.abi);\n    this.comp = new this.web3.eth.Contract(ERC20Json.abi);\n    this.link = new this.web3.eth.Contract(ERC20Json.abi);\n    this.lend = new this.web3.eth.Contract(ERC20Json.abi);\n    this.snx = new this.web3.eth.Contract(ERC20Json.abi);\n    this.mkr = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam_ycrv_uni_lp = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam_yycrv_uni_lp = new this.web3.eth.Contract(ERC20Json.abi);\n    this.erc20 = new this.web3.eth.Contract(ERC20Json.abi);\n    this.pool = new this.web3.eth.Contract(LENDPoolJson.abi);\n    this.yamV2 = new this.web3.eth.Contract(YAMv2Json.abi);\n    this.yamV2migration = new this.web3.eth.Contract(YAMv2MigrationJson.abi);\n    this.yamV3 = new this.web3.eth.Contract(YAMv3Json.abi);\n    this.migrator = new this.web3.eth.Contract(MigratorJson.abi);\n    this.rebaser = new this.web3.eth.Contract(YAMRebaserJson.abi);\n    this.reserves = new this.web3.eth.Contract(YAMReservesJson.abi);\n    this.gov = new this.web3.eth.Contract(YAMGovJson.abi);\n    this.gov2 = new this.web3.eth.Contract(YAMGovJson.abi);\n    this.timelock = new this.web3.eth.Contract(YAMTimelockJson.abi);\n    this.weth = new this.web3.eth.Contract(WETHJson);\n    this.setProvider(provider, networkId);\n    this.setDefaultAccount(this.web3.eth.defaultAccount);\n  }\n\n  setProvider(provider, networkId) {\n    this.yam.setProvider(provider);\n    this.rebaser.setProvider(provider);\n    this.reserves.setProvider(provider);\n    this.gov.setProvider(provider);\n    this.timelock.setProvider(provider);\n    const contracts = [{\n      contract: this.yam,\n      json: YAMJson\n    }, {\n      contract: this.rebaser,\n      json: YAMRebaserJson\n    }, {\n      contract: this.reserves,\n      json: YAMReservesJson\n    }, {\n      contract: this.gov,\n      json: YAMGovJson\n    }, {\n      contract: this.timelock,\n      json: YAMTimelockJson\n    }, {\n      contract: this.ycrv_pool,\n      json: IncOldJson\n    }, {\n      contract: this.yycrv_pool,\n      json: IncJson\n    }, {\n      contract: this.strneth_pool,\n      json: StrnEthIncJson\n    }, {\n      contract: this.strain_nft,\n      json: StrainNFT\n    }, {\n      contract: this.strain_nft_crafter,\n      json: StrainNFTCrafter\n    }, {\n      contract: this.strain_nft_crafter_old,\n      json: StrainNFTCrafterOLD\n    }, {\n      contract: this.strain_nft_genetics,\n      json: StrainNFTGenetics\n    }, {\n      contract: this.strnxiot_pool,\n      json: StrnXiotIncJson\n    }, {\n      contract: this.stxpInc_pool,\n      json: StxpIncentivizer\n    }, {\n      contract: this.eth_pool,\n      json: WETHPoolJson\n    }, {\n      contract: this.yfi_pool,\n      json: YFIPoolJson\n    }, {\n      contract: this.ampl_pool,\n      json: AMPLPoolJson\n    }, {\n      contract: this.snx_pool,\n      json: SNXPoolJson\n    }, {\n      contract: this.mkr_pool,\n      json: MKRPoolJson\n    }, {\n      contract: this.lend_pool,\n      json: LENDPoolJson\n    }, {\n      contract: this.link_pool,\n      json: LINKPoolJson\n    }, {\n      contract: this.comp_pool,\n      json: COMPPoolJson\n    }, {\n      contract: this.yamV2,\n      json: YAMv2Json\n    }, {\n      contract: this.yamV2migration,\n      json: YAMv2MigrationJson\n    }, {\n      contract: this.yamV3,\n      json: YAMv3Json\n    }, {\n      contract: this.migrator,\n      json: MigratorJson\n    }];\n    contracts.forEach(contract => this.setContractProvider(contract.contract, contract.json, provider, networkId));\n    this.yfi.options.address = addressMap[\"YFI\"];\n    this.ycrv.options.address = addressMap[\"YCRV\"];\n    this.yycrv.options.address = addressMap[\"YYCRV\"];\n    this.weth.options.address = addressMap[\"WETH\"];\n    this.snx.options.address = addressMap[\"SNX\"];\n    this.comp.options.address = addressMap[\"COMP\"];\n    this.link.options.address = addressMap[\"LINK\"];\n    this.lend.options.address = addressMap[\"LEND\"];\n    this.mkr.options.address = addressMap[\"MKR\"];\n    this.UNIAmpl.options.address = addressMap[\"UNIAmpl\"];\n    this.uni_fact.options.address = addressMap[\"uniswapFactoryV2\"];\n    this.uni_router.options.address = addressMap[\"UNIRouter\"];\n    this.yam_ycrv_uni_lp.options.address = addressMap[\"YAMYCRV\"];\n    this.yam_yycrv_uni_lp.options.address = addressMap[\"YAMYYCRV\"];\n    this.gov2.options.address = \"0x78BdD33e95ECbcAC16745FB28DB0FFb703344026\";\n    this.pools = [{\n      \"tokenAddr\": this.yfi.options.address,\n      \"poolAddr\": this.yfi_pool.options.address\n    }, {\n      \"tokenAddr\": this.snx.options.address,\n      \"poolAddr\": this.snx_pool.options.address\n    }, {\n      \"tokenAddr\": this.weth.options.address,\n      \"poolAddr\": this.eth_pool.options.address\n    }, {\n      \"tokenAddr\": this.comp.options.address,\n      \"poolAddr\": this.comp_pool.options.address\n    }, {\n      \"tokenAddr\": this.link.options.address,\n      \"poolAddr\": this.link_pool.options.address\n    }, {\n      \"tokenAddr\": this.lend.options.address,\n      \"poolAddr\": this.lend_pool.options.address\n    }, {\n      \"tokenAddr\": this.mkr.options.address,\n      \"poolAddr\": this.mkr_pool.options.address\n    }, {\n      \"tokenAddr\": this.UNIAmpl.options.address,\n      \"poolAddr\": this.ampl_pool.options.address\n    }];\n    this.names = {};\n    this.names[this.yam.options.address] = \"YAMv1\";\n    this.names[this.rebaser.options.address] = \"Rebaser\";\n    this.names[this.reserves.options.address] = \"Reserves\";\n    this.names[this.gov.options.address] = \"Previous Governor\";\n    this.names[this.timelock.options.address] = \"Timelock Governance\";\n    this.names[this.ycrv_pool.options.address] = \"YCRV Pool\";\n    this.names[this.yycrv_pool.options.address] = \"yUSD Farming\";\n    this.names[this.strneth_pool.options.address] = \"STRN Farming\";\n    this.names[this.strnxiot_pool.options.address] = \"STRN Farming\";\n    this.names[this.yamV2.options.address] = \"YAMv2\";\n    this.names[this.yamV2migration.options.address] = \"YAMv1-YAMv2 Migrator\";\n    this.names[this.yamV3.options.address] = \"YAM (v3)\";\n    this.names[this.migrator.options.address] = \"Migrator\";\n    this.names[this.gov2.options.address] = \"Current Governor\";\n  }\n\n  setDefaultAccount(account) {\n    this.yfi.options.from = account;\n    this.ycrv.options.from = account;\n    this.yam.options.from = account;\n    this.weth.options.from = account;\n  }\n\n  async callContractFunction(method, options) {\n    const {\n      confirmations,\n      confirmationType,\n      autoGasMultiplier,\n      ...txOptions\n    } = options;\n\n    if (!this.blockGasLimit) {\n      await this.setGasLimit();\n    }\n\n    if (!txOptions.gasPrice && this.defaultGasPrice) {\n      txOptions.gasPrice = this.defaultGasPrice;\n    }\n\n    if (confirmationType === Types.ConfirmationType.Simulate || !options.gas) {\n      let gasEstimate;\n\n      if (this.defaultGas && confirmationType !== Types.ConfirmationType.Simulate) {\n        txOptions.gas = this.defaultGas;\n      } else {\n        try {\n          console.log(\"estimating gas\");\n          gasEstimate = await method.estimateGas(txOptions);\n        } catch (error) {\n          const data = method.encodeABI();\n          const {\n            from,\n            value\n          } = options;\n          const to = method._parent._address;\n          error.transactionData = {\n            from,\n            value,\n            data,\n            to\n          };\n          throw error;\n        }\n\n        const multiplier = autoGasMultiplier || this.autoGasMultiplier;\n        const totalGas = Math.floor(gasEstimate * multiplier);\n        txOptions.gas = totalGas < this.blockGasLimit ? totalGas : this.blockGasLimit;\n      }\n\n      if (confirmationType === Types.ConfirmationType.Simulate) {\n        let g = txOptions.gas;\n        return {\n          gasEstimate,\n          g\n        };\n      }\n    }\n\n    if (txOptions.value) {\n      txOptions.value = new BigNumber(txOptions.value).toFixed(0);\n    } else {\n      txOptions.value = '0';\n    }\n\n    const promi = method.send(txOptions);\n    const OUTCOMES = {\n      INITIAL: 0,\n      RESOLVED: 1,\n      REJECTED: 2\n    };\n    let hashOutcome = OUTCOMES.INITIAL;\n    let confirmationOutcome = OUTCOMES.INITIAL;\n    const t = confirmationType !== undefined ? confirmationType : this.confirmationType;\n\n    if (!Object.values(Types.ConfirmationType).includes(t)) {\n      throw new Error(`Invalid confirmation type: ${t}`);\n    }\n\n    let hashPromise;\n    let confirmationPromise;\n\n    if (t === Types.ConfirmationType.Hash || t === Types.ConfirmationType.Both) {\n      hashPromise = new Promise((resolve, reject) => {\n        promi.on('error', error => {\n          if (hashOutcome === OUTCOMES.INITIAL) {\n            hashOutcome = OUTCOMES.REJECTED;\n            reject(error);\n            const anyPromi = promi;\n            anyPromi.off();\n          }\n        });\n        promi.on('transactionHash', txHash => {\n          if (hashOutcome === OUTCOMES.INITIAL) {\n            hashOutcome = OUTCOMES.RESOLVED;\n            resolve(txHash);\n\n            if (t !== Types.ConfirmationType.Both) {\n              const anyPromi = promi;\n              anyPromi.off();\n            }\n          }\n        });\n      });\n    }\n\n    if (t === Types.ConfirmationType.Confirmed || t === Types.ConfirmationType.Both) {\n      confirmationPromise = new Promise((resolve, reject) => {\n        promi.on('error', error => {\n          if ((t === Types.ConfirmationType.Confirmed || hashOutcome === OUTCOMES.RESOLVED) && confirmationOutcome === OUTCOMES.INITIAL) {\n            confirmationOutcome = OUTCOMES.REJECTED;\n            reject(error);\n            const anyPromi = promi;\n            anyPromi.off();\n          }\n        });\n        const desiredConf = confirmations || this.defaultConfirmations;\n\n        if (desiredConf) {\n          promi.on('confirmation', (confNumber, receipt) => {\n            if (confNumber >= desiredConf) {\n              if (confirmationOutcome === OUTCOMES.INITIAL) {\n                confirmationOutcome = OUTCOMES.RESOLVED;\n                resolve(receipt);\n                const anyPromi = promi;\n                anyPromi.off();\n              }\n            }\n          });\n        } else {\n          promi.on('receipt', receipt => {\n            confirmationOutcome = OUTCOMES.RESOLVED;\n            resolve(receipt);\n            const anyPromi = promi;\n            anyPromi.off();\n          });\n        }\n      });\n    }\n\n    if (t === Types.ConfirmationType.Hash) {\n      const transactionHash = await hashPromise;\n\n      if (this.notifier) {\n        this.notifier.hash(transactionHash);\n      }\n\n      return {\n        transactionHash\n      };\n    }\n\n    if (t === Types.ConfirmationType.Confirmed) {\n      return confirmationPromise;\n    }\n\n    const transactionHash = await hashPromise;\n\n    if (this.notifier) {\n      this.notifier.hash(transactionHash);\n    }\n\n    return {\n      transactionHash,\n      confirmation: confirmationPromise\n    };\n  }\n\n  async callConstantContractFunction(method, options) {\n    const m2 = method;\n    const {\n      blockNumber,\n      ...txOptions\n    } = options;\n    return m2.call(txOptions, blockNumber);\n  }\n\n  async setGasLimit() {\n    const block = await this.web3.eth.getBlock('latest');\n    this.blockGasLimit = block.gasLimit - SUBTRACT_GAS_LIMIT;\n  }\n\n  setContractProvider(contract, contractJson, provider, networkId) {\n    contract.setProvider(provider);\n\n    try {\n      contract.options.address = contractJson.networks[networkId] && contractJson.networks[networkId].address;\n    } catch (error) {// console.log(error)\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/hienle/Documents/GitHub/comfortNFT/src/yam-sdk/lib/lib/contracts.js"],"names":["BigNumber","Web3","Types","SUBTRACT_GAS_LIMIT","addressMap","ERC20Json","YAMv2Json","YAMv2MigrationJson","YAMJson","YAMRebaserJson","YAMReservesJson","YAMGovJson","YAMTimelockJson","WETHJson","SNXJson","UNIFactJson","UNIPairJson","UNIRouterJson","WETHPoolJson","AMPLPoolJson","YFIPoolJson","MKRPoolJson","LENDPoolJson","COMPPoolJson","SNXPoolJson","LINKPoolJson","IncOldJson","IncJson","StrnEthIncJson","StrnXiotIncJson","StxpIncentivizer","StrainNFT","StrainNFTCrafter","StrainNFTCrafterOLD","StrainNFTGenetics","MigratorJson","YAMv3Json","Contracts","constructor","provider","networkId","web3","options","defaultConfirmations","autoGasMultiplier","confirmationType","ConfirmationType","Confirmed","defaultGas","defaultGasPrice","uni_pair","eth","Contract","uni_router","uni_fact","yfi","abi","UNIAmpl","ycrv","yycrv","yam","yfi_pool","eth_pool","ampl_pool","ycrv_pool","yycrv_pool","strneth_pool","strnxiot_pool","stxpInc_pool","strain_nft","strain_nft_crafter","networks","address","strain_nft_crafter_old","strain_nft_genetics","comp_pool","link_pool","lend_pool","snx_pool","mkr_pool","comp","link","lend","snx","mkr","yam_ycrv_uni_lp","yam_yycrv_uni_lp","erc20","pool","yamV2","yamV2migration","yamV3","migrator","rebaser","reserves","gov","gov2","timelock","weth","setProvider","setDefaultAccount","defaultAccount","contracts","contract","json","forEach","setContractProvider","pools","names","account","from","callContractFunction","method","confirmations","txOptions","blockGasLimit","setGasLimit","gasPrice","Simulate","gas","gasEstimate","console","log","estimateGas","error","data","encodeABI","value","to","_parent","_address","transactionData","multiplier","totalGas","Math","floor","g","toFixed","promi","send","OUTCOMES","INITIAL","RESOLVED","REJECTED","hashOutcome","confirmationOutcome","t","undefined","Object","values","includes","Error","hashPromise","confirmationPromise","Hash","Both","Promise","resolve","reject","on","anyPromi","off","txHash","desiredConf","confNumber","receipt","transactionHash","notifier","hash","confirmation","callConstantContractFunction","m2","blockNumber","call","block","getBlock","gasLimit","contractJson"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js/bignumber';\nimport Web3 from 'web3';\nimport * as Types from \"./types.js\";\nimport { SUBTRACT_GAS_LIMIT, addressMap } from './constants.js';\n\nimport ERC20Json from '../clean_build/contracts/IERC20.json';\nimport YAMv2Json from '../clean_build/contracts/YAMv2.json';\nimport YAMv2MigrationJson from '../clean_build/contracts/YAMv2Migration.json';\nimport YAMJson from '../clean_build/contracts/YAMDelegator.json';\nimport YAMRebaserJson from '../clean_build/contracts/YAMRebaser.json';\nimport YAMReservesJson from '../clean_build/contracts/YAMReserves.json';\nimport YAMGovJson from '../clean_build/contracts/GovernorAlpha.json';\nimport YAMTimelockJson from '../clean_build/contracts/Timelock.json';\nimport WETHJson from './weth.json';\nimport SNXJson from './snx.json';\nimport UNIFactJson from './unifact2.json';\nimport UNIPairJson from './uni2.json';\nimport UNIRouterJson from './uniR.json';\n\nimport WETHPoolJson from '../clean_build/contracts/YAMETHPool.json';\nimport AMPLPoolJson from '../clean_build/contracts/YAMAMPLPool.json';\nimport YFIPoolJson from '../clean_build/contracts/YAMYFIPool.json';\n\nimport MKRPoolJson from '../clean_build/contracts/YAMMKRPool.json';\nimport LENDPoolJson from '../clean_build/contracts/YAMLENDPool.json';\nimport COMPPoolJson from '../clean_build/contracts/YAMCOMPPool.json';\nimport SNXPoolJson from '../clean_build/contracts/YAMSNXPool.json';\nimport LINKPoolJson from '../clean_build/contracts/YAMLINKPool.json';\n\nimport IncOldJson from '../clean_build/contracts/YAMIncentivizerOld.json';\nimport IncJson from '../clean_build/contracts/YAMIncentivizer.json';\nimport StrnEthIncJson from '../clean_build/contracts/STRNIncentivizer.json'\nimport StrnXiotIncJson from '../clean_build/contracts/STRNXIOTIncentivizer.json'\nimport StxpIncentivizer from '../clean_build/contracts/STXPIncentivizer.json'\nimport StrainNFT from '../clean_build/contracts/StrainNFT.json'\nimport StrainNFTCrafter from '../clean_build/contracts/StrainNFTCrafter.json'\nimport StrainNFTCrafterOLD from '../clean_build/contracts/StrainNFTCrafter.json' // same contract ABI different address hardcoded change below\nimport StrainNFTGenetics from '../clean_build/contracts/StrainNFTGenetics.json'\n\nimport MigratorJson from \"../clean_build/contracts/Migrator.json\"\nimport YAMv3Json from \"../clean_build/contracts/YAMDelegatorV3.json\"\n\nexport class Contracts {IncJson\n  constructor(\n    provider,\n    networkId,\n    web3,\n    options\n  ) {\n    this.web3 = web3;\n    this.defaultConfirmations = options.defaultConfirmations;\n    this.autoGasMultiplier = options.autoGasMultiplier || 1.5;\n    this.confirmationType = options.confirmationType || Types.ConfirmationType.Confirmed;\n    this.defaultGas = options.defaultGas;\n    this.defaultGasPrice = options.defaultGasPrice;\n\n    this.uni_pair = new this.web3.eth.Contract(UNIPairJson);\n    this.uni_router = new this.web3.eth.Contract(UNIRouterJson);\n    this.uni_fact = new this.web3.eth.Contract(UNIFactJson);\n    this.yfi = new this.web3.eth.Contract(ERC20Json.abi);\n    this.UNIAmpl = new this.web3.eth.Contract(ERC20Json.abi);\n    this.ycrv = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yycrv = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam = new this.web3.eth.Contract(YAMJson.abi);\n\n    this.yfi_pool = new this.web3.eth.Contract(YFIPoolJson.abi);\n    this.eth_pool = new this.web3.eth.Contract(WETHPoolJson.abi);\n    this.ampl_pool = new this.web3.eth.Contract(AMPLPoolJson.abi);\n    this.ycrv_pool = new this.web3.eth.Contract(IncOldJson.abi);\n    this.yycrv_pool = new this.web3.eth.Contract(IncJson.abi);\n\n    // new STRN incentivizer\n    this.strneth_pool = new this.web3.eth.Contract(StrnEthIncJson.abi);\n    this.strnxiot_pool = new this.web3.eth.Contract(StrnXiotIncJson.abi);\n    this.stxpInc_pool = new this.web3.eth.Contract(StxpIncentivizer.abi);\n\n    // NFT \n    this.strain_nft = new this.web3.eth.Contract(StrainNFT.abi);\n    this.strain_nft_crafter = new this.web3.eth.Contract(StrainNFTCrafter.abi);\n\n    // j00lz hack for burn nfts page\n    StrainNFTCrafterOLD.networks[1].address = \"0xCbb9fA9b7b3d70231B4aD1C6819D6251d612b116\"    \n    this.strain_nft_crafter_old = new this.web3.eth.Contract(StrainNFTCrafterOLD.abi);\n    \n    this.strain_nft_genetics = new this.web3.eth.Contract(StrainNFTGenetics.abi);\n\n    this.comp_pool = new this.web3.eth.Contract(COMPPoolJson.abi);\n    this.link_pool = new this.web3.eth.Contract(LINKPoolJson.abi);\n    this.lend_pool = new this.web3.eth.Contract(LENDPoolJson.abi);\n    this.snx_pool = new this.web3.eth.Contract(SNXPoolJson.abi);\n    this.mkr_pool = new this.web3.eth.Contract(MKRPoolJson.abi);\n\n    this.comp = new this.web3.eth.Contract(ERC20Json.abi);\n    this.link = new this.web3.eth.Contract(ERC20Json.abi);\n    this.lend = new this.web3.eth.Contract(ERC20Json.abi);\n    this.snx = new this.web3.eth.Contract(ERC20Json.abi);\n    this.mkr = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam_ycrv_uni_lp = new this.web3.eth.Contract(ERC20Json.abi);\n    this.yam_yycrv_uni_lp = new this.web3.eth.Contract(ERC20Json.abi);\n\n    this.erc20 = new this.web3.eth.Contract(ERC20Json.abi);\n    this.pool = new this.web3.eth.Contract(LENDPoolJson.abi);\n\n\n    this.yamV2 = new this.web3.eth.Contract(YAMv2Json.abi);\n    this.yamV2migration = new this.web3.eth.Contract(YAMv2MigrationJson.abi);\n\n    this.yamV3 = new this.web3.eth.Contract(YAMv3Json.abi);\n    this.migrator = new this.web3.eth.Contract(MigratorJson.abi);\n\n    this.rebaser = new this.web3.eth.Contract(YAMRebaserJson.abi);\n    this.reserves = new this.web3.eth.Contract(YAMReservesJson.abi);\n    this.gov = new this.web3.eth.Contract(YAMGovJson.abi);\n    this.gov2 = new this.web3.eth.Contract(YAMGovJson.abi);\n    this.timelock = new this.web3.eth.Contract(YAMTimelockJson.abi);\n    this.weth = new this.web3.eth.Contract(WETHJson);\n    this.setProvider(provider, networkId);\n    this.setDefaultAccount(this.web3.eth.defaultAccount);\n  }\n\n\n  setProvider(\n    provider,\n    networkId\n  ) {\n    this.yam.setProvider(provider);\n    this.rebaser.setProvider(provider);\n    this.reserves.setProvider(provider);\n    this.gov.setProvider(provider);\n    this.timelock.setProvider(provider);\n    const contracts = [\n      { contract: this.yam, json: YAMJson },\n      { contract: this.rebaser, json: YAMRebaserJson },\n      { contract: this.reserves, json: YAMReservesJson },\n      { contract: this.gov, json: YAMGovJson },\n      { contract: this.timelock, json: YAMTimelockJson },\n      { contract: this.ycrv_pool, json: IncOldJson },\n      { contract: this.yycrv_pool, json: IncJson },\n      { contract: this.strneth_pool, json: StrnEthIncJson },\n      { contract: this.strain_nft, json: StrainNFT },\n      { contract: this.strain_nft_crafter, json: StrainNFTCrafter },\n      { contract: this.strain_nft_crafter_old, json: StrainNFTCrafterOLD },\n      { contract: this.strain_nft_genetics, json: StrainNFTGenetics },\n      { contract: this.strnxiot_pool, json: StrnXiotIncJson },\n      { contract: this.stxpInc_pool, json: StxpIncentivizer },\n      { contract: this.eth_pool, json: WETHPoolJson },\n      { contract: this.yfi_pool, json: YFIPoolJson },\n      { contract: this.ampl_pool, json: AMPLPoolJson },\n      { contract: this.snx_pool, json: SNXPoolJson },\n      { contract: this.mkr_pool, json: MKRPoolJson },\n      { contract: this.lend_pool, json: LENDPoolJson },\n      { contract: this.link_pool, json: LINKPoolJson },\n      { contract: this.comp_pool, json: COMPPoolJson },\n      { contract: this.yamV2, json: YAMv2Json },\n      { contract: this.yamV2migration, json: YAMv2MigrationJson },\n      { contract: this.yamV3, json: YAMv3Json },\n      { contract: this.migrator, json: MigratorJson },\n    ]\n\n    contracts.forEach(contract => this.setContractProvider(\n        contract.contract,\n        contract.json,\n        provider,\n        networkId,\n      ),\n    );\n    this.yfi.options.address = addressMap[\"YFI\"];\n    this.ycrv.options.address = addressMap[\"YCRV\"];\n    this.yycrv.options.address = addressMap[\"YYCRV\"];\n    this.weth.options.address = addressMap[\"WETH\"];\n    this.snx.options.address = addressMap[\"SNX\"];\n    this.comp.options.address = addressMap[\"COMP\"];\n    this.link.options.address = addressMap[\"LINK\"];\n    this.lend.options.address = addressMap[\"LEND\"];\n    this.mkr.options.address = addressMap[\"MKR\"];\n    this.UNIAmpl.options.address = addressMap[\"UNIAmpl\"];\n    this.uni_fact.options.address = addressMap[\"uniswapFactoryV2\"];\n    this.uni_router.options.address = addressMap[\"UNIRouter\"];\n    this.yam_ycrv_uni_lp.options.address = addressMap[\"YAMYCRV\"];\n    this.yam_yycrv_uni_lp.options.address = addressMap[\"YAMYYCRV\"];\n    this.gov2.options.address = \"0x78BdD33e95ECbcAC16745FB28DB0FFb703344026\";\n\n    this.pools = [\n      {\"tokenAddr\": this.yfi.options.address, \"poolAddr\": this.yfi_pool.options.address},\n      {\"tokenAddr\": this.snx.options.address, \"poolAddr\": this.snx_pool.options.address},\n      {\"tokenAddr\": this.weth.options.address, \"poolAddr\": this.eth_pool.options.address},\n      {\"tokenAddr\": this.comp.options.address, \"poolAddr\": this.comp_pool.options.address},\n      {\"tokenAddr\": this.link.options.address, \"poolAddr\": this.link_pool.options.address},\n      {\"tokenAddr\": this.lend.options.address, \"poolAddr\": this.lend_pool.options.address},\n      {\"tokenAddr\": this.mkr.options.address, \"poolAddr\": this.mkr_pool.options.address},\n      {\"tokenAddr\": this.UNIAmpl.options.address, \"poolAddr\": this.ampl_pool.options.address},\n    ]\n\n    this.names = {};\n    this.names[this.yam.options.address] = \"YAMv1\";\n    this.names[this.rebaser.options.address] = \"Rebaser\";\n    this.names[this.reserves.options.address] = \"Reserves\";\n    this.names[this.gov.options.address] = \"Previous Governor\";\n    this.names[this.timelock.options.address] = \"Timelock Governance\";\n    this.names[this.ycrv_pool.options.address] = \"YCRV Pool\";\n    this.names[this.yycrv_pool.options.address] = \"yUSD Farming\";\n    this.names[this.strneth_pool.options.address] = \"STRN Farming\";\n    this.names[this.strnxiot_pool.options.address] = \"STRN Farming\";\n    this.names[this.yamV2.options.address] = \"YAMv2\";\n    this.names[this.yamV2migration.options.address] = \"YAMv1-YAMv2 Migrator\";\n    this.names[this.yamV3.options.address] = \"YAM (v3)\";\n    this.names[this.migrator.options.address] = \"Migrator\";\n    this.names[this.gov2.options.address] = \"Current Governor\";\n  }\n\n  setDefaultAccount(\n    account\n  ) {\n    this.yfi.options.from = account;\n    this.ycrv.options.from = account;\n    this.yam.options.from = account;\n    this.weth.options.from = account;\n  }\n\n  async callContractFunction(\n    method,\n    options\n  ) {\n    const { confirmations, confirmationType, autoGasMultiplier, ...txOptions } = options;\n\n    if (!this.blockGasLimit) {\n      await this.setGasLimit();\n    }\n\n    if (!txOptions.gasPrice && this.defaultGasPrice) {\n      txOptions.gasPrice = this.defaultGasPrice;\n    }\n\n    if (confirmationType === Types.ConfirmationType.Simulate || !options.gas) {\n      let gasEstimate;\n      if (this.defaultGas && confirmationType !== Types.ConfirmationType.Simulate) {\n        txOptions.gas = this.defaultGas;\n      } else {\n        try {\n          console.log(\"estimating gas\");\n          gasEstimate = await method.estimateGas(txOptions);\n        } catch (error) {\n          const data = method.encodeABI();\n          const { from, value } = options;\n          const to = method._parent._address;\n          error.transactionData = { from, value, data, to };\n          throw error;\n        }\n\n        const multiplier = autoGasMultiplier || this.autoGasMultiplier;\n        const totalGas = Math.floor(gasEstimate * multiplier);\n        txOptions.gas = totalGas < this.blockGasLimit ? totalGas : this.blockGasLimit;\n      }\n\n      if (confirmationType === Types.ConfirmationType.Simulate) {\n        let g = txOptions.gas;\n        return { gasEstimate, g };\n      }\n    }\n\n    if (txOptions.value) {\n      txOptions.value = new BigNumber(txOptions.value).toFixed(0);\n    } else {\n      txOptions.value = '0';\n    }\n\n    const promi = method.send(txOptions);\n\n    const OUTCOMES = {\n      INITIAL: 0,\n      RESOLVED: 1,\n      REJECTED: 2,\n    };\n\n    let hashOutcome = OUTCOMES.INITIAL;\n    let confirmationOutcome = OUTCOMES.INITIAL;\n\n    const t = confirmationType !== undefined ? confirmationType : this.confirmationType;\n\n    if (!Object.values(Types.ConfirmationType).includes(t)) {\n      throw new Error(`Invalid confirmation type: ${t}`);\n    }\n\n    let hashPromise;\n    let confirmationPromise;\n\n    if (t === Types.ConfirmationType.Hash || t === Types.ConfirmationType.Both) {\n      hashPromise = new Promise(\n        (resolve, reject) => {\n          promi.on('error', (error) => {\n            if (hashOutcome === OUTCOMES.INITIAL) {\n              hashOutcome = OUTCOMES.REJECTED;\n              reject(error);\n              const anyPromi = promi ;\n              anyPromi.off();\n            }\n          });\n\n          promi.on('transactionHash', (txHash) => {\n            if (hashOutcome === OUTCOMES.INITIAL) {\n              hashOutcome = OUTCOMES.RESOLVED;\n              resolve(txHash);\n              if (t !== Types.ConfirmationType.Both) {\n                const anyPromi = promi ;\n                anyPromi.off();\n              }\n            }\n          });\n        },\n      );\n    }\n\n    if (t === Types.ConfirmationType.Confirmed || t === Types.ConfirmationType.Both) {\n      confirmationPromise = new Promise(\n        (resolve, reject) => {\n          promi.on('error', (error) => {\n            if (\n              (t === Types.ConfirmationType.Confirmed || hashOutcome === OUTCOMES.RESOLVED)\n              && confirmationOutcome === OUTCOMES.INITIAL\n            ) {\n              confirmationOutcome = OUTCOMES.REJECTED;\n              reject(error);\n              const anyPromi = promi ;\n              anyPromi.off();\n            }\n          });\n\n          const desiredConf = confirmations || this.defaultConfirmations;\n          if (desiredConf) {\n            promi.on('confirmation', (confNumber, receipt) => {\n              if (confNumber >= desiredConf) {\n                if (confirmationOutcome === OUTCOMES.INITIAL) {\n                  confirmationOutcome = OUTCOMES.RESOLVED;\n                  resolve(receipt);\n                  const anyPromi = promi ;\n                  anyPromi.off();\n                }\n              }\n            });\n          } else {\n            promi.on('receipt', (receipt) => {\n              confirmationOutcome = OUTCOMES.RESOLVED;\n              resolve(receipt);\n              const anyPromi = promi ;\n              anyPromi.off();\n            });\n          }\n        },\n      );\n    }\n\n    if (t === Types.ConfirmationType.Hash) {\n      const transactionHash = await hashPromise;\n      if (this.notifier) {\n          this.notifier.hash(transactionHash)\n      }\n      return { transactionHash };\n    }\n\n    if (t === Types.ConfirmationType.Confirmed) {\n      return confirmationPromise;\n    }\n\n    const transactionHash = await hashPromise;\n    if (this.notifier) {\n        this.notifier.hash(transactionHash)\n    }\n    return {\n      transactionHash,\n      confirmation: confirmationPromise,\n    };\n  }\n\n  async callConstantContractFunction(\n    method,\n    options\n  ) {\n    const m2 = method;\n    const { blockNumber, ...txOptions } = options;\n    return m2.call(txOptions, blockNumber);\n  }\n\n  async setGasLimit() {\n    const block = await this.web3.eth.getBlock('latest');\n    this.blockGasLimit = block.gasLimit - SUBTRACT_GAS_LIMIT;\n  }\n\n  setContractProvider(\n    contract,\n    contractJson,\n    provider,\n    networkId,\n  ){\n    contract.setProvider(provider);\n    try {\n      contract.options.address = contractJson.networks[networkId]\n        && contractJson.networks[networkId].address;\n    } catch (error) {\n      // console.log(error)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}