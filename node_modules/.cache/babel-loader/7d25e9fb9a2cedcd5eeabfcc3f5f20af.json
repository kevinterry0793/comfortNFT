{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hienle/Documents/GitHub/comfortNFT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{useWallet}from'use-wallet';import useYam from'hooks/useYam';import{claimVested,currUnclaimedMigratorVesting,currUnclaimedDelegatorRewards,currVested}from'yam-sdk/utils';import ConfirmTransactionModal from'components/ConfirmTransactionModal';import Context from'./Context';var Provider=function Provider(_ref){var children=_ref.children;var _useWallet=useWallet(),account=_useWallet.account;var yam=useYam();var _useState=useState(),_useState2=_slicedToArray(_useState,2),vestedBalance=_useState2[0],setVestedBalance=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),vestedDelegatorRewardBalance=_useState4[0],setVestedDelegatorRewardBalance=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),vestedMigratedBalance=_useState6[0],setVestedMigratedBalance=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isClaiming=_useState8[0],setIsClaiming=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),confirmTxModalIsOpen=_useState10[0],setConfirmtxModalIsOpen=_useState10[1];var fetchVestedBalances=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var vBal,dRVBal,mVBal;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return currVested(yam,account);case 2:vBal=_context.sent;_context.next=5;return currUnclaimedDelegatorRewards(yam,account);case 5:dRVBal=_context.sent;_context.next=8;return currUnclaimedMigratorVesting(yam,account);case 8:mVBal=_context.sent;setVestedBalance(vBal);setVestedDelegatorRewardBalance(dRVBal);setVestedMigratedBalance(mVBal);case 12:case\"end\":return _context.stop();}}},_callee);})),[account,setVestedBalance,setVestedDelegatorRewardBalance,setVestedMigratedBalance,yam]);var handleClaimTxSent=useCallback(function(){setIsClaiming(true);setConfirmtxModalIsOpen(false);},[setIsClaiming,setConfirmtxModalIsOpen]);var handleClaim=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setConfirmtxModalIsOpen(true);_context2.next=3;return claimVested(yam,account,handleClaimTxSent);case 3:setIsClaiming(false);case 4:case\"end\":return _context2.stop();}}},_callee2);})),[account,handleClaimTxSent,setConfirmtxModalIsOpen,setIsClaiming,yam]);useEffect(function(){if(account&&yam){fetchVestedBalances();}},[account,fetchVestedBalances,yam]);useEffect(function(){if(account&&yam){fetchVestedBalances();var refreshInterval=setInterval(fetchVestedBalances,10000);return function(){return clearInterval(refreshInterval);};}},[account,yam,fetchVestedBalances]);return/*#__PURE__*/React.createElement(Context.Provider,{value:{onClaim:handleClaim,isClaiming:isClaiming,vestedBalance:vestedBalance,vestedDelegatorRewardBalance:vestedDelegatorRewardBalance,vestedMigratedBalance:vestedMigratedBalance}},children,/*#__PURE__*/React.createElement(ConfirmTransactionModal,{isOpen:confirmTxModalIsOpen}));};export default Provider;","map":null,"metadata":{},"sourceType":"module"}