function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
var reactRouterDom = require('react-router-dom');

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: ", ";\n  display: ", ";\n  flex: ", ";\n  flex-direction: ", ";\n  height: ", ";\n  justify-content: ", ";\n  margin: ", ";\n  margin-bottom: ", ";\n  margin-left: ", ";\n  margin-right: ", ";\n  margin-top: ", ";\n  max-height: ", ";\n  max-width: ", ";\n  min-height: ", ";\n  min-width: ", ";\n  overflow: ", ";\n  padding: ", ";\n  padding-bottom: ", ";\n  padding-left: ", ";\n  padding-right: ", ";\n  padding-top: ", ";\n  position: ", ";\n  width: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var Box = function Box(_ref) {
  var children = _ref.children,
      column = _ref.column,
      height = _ref.height,
      _ref$margin = _ref.margin,
      margin = _ref$margin === void 0 ? 0 : _ref$margin,
      _ref$marginBottom = _ref.marginBottom,
      marginBottom = _ref$marginBottom === void 0 ? 0 : _ref$marginBottom,
      _ref$marginHorizontal = _ref.marginHorizontal,
      marginHorizontal = _ref$marginHorizontal === void 0 ? 0 : _ref$marginHorizontal,
      _ref$marginLeft = _ref.marginLeft,
      marginLeft = _ref$marginLeft === void 0 ? 0 : _ref$marginLeft,
      _ref$marginRight = _ref.marginRight,
      marginRight = _ref$marginRight === void 0 ? 0 : _ref$marginRight,
      _ref$marginTop = _ref.marginTop,
      marginTop = _ref$marginTop === void 0 ? 0 : _ref$marginTop,
      _ref$marginVertical = _ref.marginVertical,
      marginVertical = _ref$marginVertical === void 0 ? 0 : _ref$marginVertical,
      maxHeight = _ref.maxHeight,
      maxWidth = _ref.maxWidth,
      minHeight = _ref.minHeight,
      minWidth = _ref.minWidth,
      overflow = _ref.overflow,
      _ref$padding = _ref.padding,
      padding = _ref$padding === void 0 ? 0 : _ref$padding,
      _ref$paddingBottom = _ref.paddingBottom,
      paddingBottom = _ref$paddingBottom === void 0 ? 0 : _ref$paddingBottom,
      _ref$paddingHorizonta = _ref.paddingHorizontal,
      paddingHorizontal = _ref$paddingHorizonta === void 0 ? 0 : _ref$paddingHorizonta,
      _ref$paddingLeft = _ref.paddingLeft,
      paddingLeft = _ref$paddingLeft === void 0 ? 0 : _ref$paddingLeft,
      _ref$paddingRight = _ref.paddingRight,
      paddingRight = _ref$paddingRight === void 0 ? 0 : _ref$paddingRight,
      _ref$paddingTop = _ref.paddingTop,
      paddingTop = _ref$paddingTop === void 0 ? 0 : _ref$paddingTop,
      _ref$paddingVertical = _ref.paddingVertical,
      paddingVertical = _ref$paddingVertical === void 0 ? 0 : _ref$paddingVertical,
      position = _ref.position,
      reverse = _ref.reverse,
      row = _ref.row,
      width = _ref.width,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "column", "height", "margin", "marginBottom", "marginHorizontal", "marginLeft", "marginRight", "marginTop", "marginVertical", "maxHeight", "maxWidth", "minHeight", "minWidth", "overflow", "padding", "paddingBottom", "paddingHorizontal", "paddingLeft", "paddingRight", "paddingTop", "paddingVertical", "position", "reverse", "row", "width"]);

  var _useContext = React.useContext(styled.ThemeContext),
      spacing = _useContext.spacing;

  var display = React.useMemo(function () {
    if (row || column) {
      return 'flex';
    }

    return 'block';
  }, [column, row]);
  var flexDirection = React.useMemo(function () {
    if (row && reverse) {
      return 'row-reverse';
    }

    if (column && reverse) {
      return 'column-reverse';
    } else if (column) {
      return 'column';
    }

    return undefined;
  }, [column]);
  var boxHeight = React.useMemo(function () {
    if (height) {
      return typeof height === 'number' ? height + 'px' : height;
    }

    return undefined;
  }, [height]);
  var boxWidth = React.useMemo(function () {
    if (width) {
      return typeof width === 'number' ? width + 'px' : width;
    }

    return undefined;
  }, [width]);
  var minBoxHeight = React.useMemo(function () {
    if (typeof minHeight !== 'undefined') {
      return typeof minHeight === 'number' ? minHeight + 'px' : minHeight;
    }

    return minHeight;
  }, [minHeight]);
  var minBoxWidth = React.useMemo(function () {
    if (typeof minWidth !== 'undefined') {
      return typeof minWidth === 'number' ? minWidth + 'px' : minWidth;
    }

    return minWidth;
  }, [minWidth]);
  var maxBoxHeight = React.useMemo(function () {
    if (maxHeight) {
      return typeof maxHeight === 'number' ? maxHeight + 'px' : maxHeight;
    }

    return undefined;
  }, [maxHeight]);
  var maxBoxWidth = React.useMemo(function () {
    if (maxWidth) {
      return typeof maxWidth === 'number' ? maxWidth + 'px' : maxWidth;
    }

    return undefined;
  }, [maxWidth]);
  return React__default.createElement(StyledBox, Object.assign({}, props, {
    display: display,
    flexDirection: flexDirection,
    height: boxHeight,
    margin: spacing[margin || 0],
    marginBottom: spacing[marginBottom || marginVertical || 0],
    marginLeft: spacing[marginLeft || marginHorizontal || 0],
    marginRight: spacing[marginRight || marginHorizontal || 0],
    marginTop: spacing[marginTop || marginVertical || 0],
    maxHeight: maxBoxHeight,
    maxWidth: maxBoxWidth,
    minHeight: minBoxHeight,
    minWidth: minBoxWidth,
    overflow: overflow,
    padding: spacing[padding || 0],
    paddingBottom: spacing[paddingBottom || paddingVertical || 0],
    paddingLeft: spacing[paddingLeft || paddingHorizontal || 0],
    paddingRight: spacing[paddingRight || paddingHorizontal || 0],
    paddingTop: spacing[paddingTop || paddingVertical || 0],
    position: position,
    width: boxWidth
  }), children);
};

var StyledBox = styled__default.div(_templateObject(), function (props) {
  return props.alignItems;
}, function (props) {
  return props.display;
}, function (props) {
  return props.flex;
}, function (props) {
  return props.flexDirection;
}, function (props) {
  return props.height;
}, function (props) {
  return props.justifyContent;
}, function (props) {
  return props.margin ? props.margin + 'px' : undefined;
}, function (props) {
  return props.marginBottom ? props.marginBottom + 'px' : undefined;
}, function (props) {
  return props.marginLeft ? props.marginLeft + 'px' : undefined;
}, function (props) {
  return props.marginRight ? props.marginRight + 'px' : undefined;
}, function (props) {
  return props.marginTop ? props.marginTop + 'px' : undefined;
}, function (props) {
  return props.maxHeight;
}, function (props) {
  return props.maxWidth;
}, function (props) {
  return props.minHeight;
}, function (props) {
  return props.minWidth;
}, function (props) {
  return props.overflow;
}, function (props) {
  return props.padding ? props.padding + 'px' : undefined;
}, function (props) {
  return props.paddingBottom ? props.paddingBottom + 'px' : undefined;
}, function (props) {
  return props.paddingLeft ? props.paddingLeft + 'px' : undefined;
}, function (props) {
  return props.paddingRight ? props.paddingRight + 'px' : undefined;
}, function (props) {
  return props.paddingTop ? props.paddingTop + 'px' : undefined;
}, function (props) {
  return props.position;
}, function (props) {
  return props.width;
});

var DEFAULT_COLOR = {
  h: 200,
  s: 100,
  l: 50
};

var createTheme = function createTheme(config) {
  var _ref = config || {},
      _ref$baseColor = _ref.baseColor,
      baseColor = _ref$baseColor === void 0 ? DEFAULT_COLOR : _ref$baseColor,
      baseColorDark = _ref.baseColorDark,
      baseGreyColor = _ref.baseGreyColor,
      baseGreyColorDark = _ref.baseGreyColorDark,
      _ref$borderRadius = _ref.borderRadius,
      borderRadius = _ref$borderRadius === void 0 ? 24 : _ref$borderRadius,
      _ref$siteWidth = _ref.siteWidth,
      siteWidth = _ref$siteWidth === void 0 ? 1200 : _ref$siteWidth;

  var h = baseColor.h,
      s = baseColor.s;

  var _ref2 = baseColorDark || baseColor,
      hDark = _ref2.h,
      sDark = _ref2.s;

  var _ref3 = baseGreyColor || baseColor,
      baseGreyH = _ref3.h;

  var _ref4 = baseGreyColorDark || baseColorDark || baseGreyColor || baseColor,
      baseGreyDarkH = _ref4.h;

  var blackHSLA = {
    h: baseGreyH,
    s: 95,
    l: 4
  };
  var whiteHSLA = {
    h: baseGreyH,
    s: 100,
    l: 100
  };
  var black = hslToCssString(blackHSLA);
  var white = hslToCssString(whiteHSLA);
  var grey = generateGreys(baseGreyH);
  var blackDarkHSLA = {
    h: baseGreyDarkH,
    s: 95,
    l: 4
  };
  var whiteDarkHSLA = {
    h: baseGreyDarkH,
    s: 100,
    l: 100
  };
  var blackDark = hslToCssString(blackDarkHSLA);
  var whiteDark = hslToCssString(whiteDarkHSLA);
  var greyDark = generateGreys(baseGreyDarkH);
  var buttonSizes = {
    lg: 72,
    md: 48,
    sm: 36
  };
  var colors = {
    black: black,
    grey: grey,
    primary: {
      dark: hslToCssString({
        h: h,
        s: s,
        l: 15
      }),
      light: hslToCssString({
        h: h,
        s: s,
        l: 75
      }),
      main: hslToCssString(baseColor)
    },
    white: white
  };
  var colorsDark = {
    black: blackDark,
    grey: greyDark,
    primary: {
      dark: hslToCssString({
        h: hDark,
        s: sDark,
        l: 15
      }),
      light: hslToCssString({
        h: hDark,
        s: sDark,
        l: 75
      }),
      main: hslToCssString(baseColorDark || baseColor)
    },
    white: whiteDark
  };
  var spacing = {
    0: 0,
    1: 4,
    2: 8,
    3: 16,
    4: 24,
    5: 32,
    6: 48,
    7: 72,
    8: 96
  };
  var lightTheme = {
    baseBg: "radial-gradient(circle at top, " + grey[100] + ", " + grey[200] + ")",
    baseColor: grey[200],
    borderRadius: borderRadius,
    buttonSizes: buttonSizes,
    colors: colors,
    highlightColor: grey[100],
    shadowColor: grey[300],
    siteWidth: siteWidth,
    spacing: spacing,
    surfaces: generateSurfaces({
      dark: grey[300],
      light: grey[100],
      main: grey[200]
    }, hslToCssString(_extends({}, whiteHSLA, {
      a: 100
    })), hslToCssString(_extends({}, blackHSLA, {
      a: 15
    }))),
    textColor: black
  };

  var darkTheme = _extends({}, lightTheme, {
    baseBg: "radial-gradient(circle at top, " + greyDark[700] + ", " + greyDark[800] + ")",
    baseColor: greyDark[800],
    colors: colorsDark,
    highlightColor: greyDark[700],
    shadowColor: greyDark[900],
    surfaces: generateSurfaces({
      dark: greyDark[900],
      light: greyDark[700],
      main: greyDark[800]
    }, hslToCssString(_extends({}, whiteDarkHSLA, {
      a: 7.5
    })), greyDark[900]),
    textColor: whiteDark
  });

  return {
    dark: darkTheme,
    light: lightTheme
  };
};

var hslToCssString = function hslToCssString(hsla) {
  var h = hsla.h,
      s = hsla.s,
      l = hsla.l,
      _hsla$a = hsla.a,
      a = _hsla$a === void 0 ? 100 : _hsla$a;
  return "hsl(" + h + "deg " + s + "% " + l + "% / " + a + "%)";
};

var generateGreys = function generateGreys(h) {
  return {
    100: hslToCssString({
      h: h,
      s: 20,
      l: 96
    }),
    200: hslToCssString({
      h: h,
      s: 20,
      l: 94
    }),
    300: hslToCssString({
      h: h,
      s: 20,
      l: 90
    }),
    400: hslToCssString({
      h: h,
      s: 20,
      l: 70
    }),
    500: hslToCssString({
      h: h,
      s: 7,
      l: 52
    }),
    600: hslToCssString({
      h: h,
      s: 10,
      l: 37
    }),
    700: hslToCssString({
      h: h,
      s: 17,
      l: 15
    }),
    800: hslToCssString({
      h: h,
      s: 20,
      l: 10
    }),
    900: hslToCssString({
      h: h,
      s: 20,
      l: 5
    })
  };
};

var generateSurfaces = function generateSurfaces(base, highlight, shadow) {
  var baseBg = "radial-gradient(circle at top, " + base.light + ", " + base.main + ")";
  return {
    N2: {
      background: "radial-gradient(circle at top, " + base.main + ", " + base.dark + ")",
      border: '0',
      highlight: "inset 4px -4px 8px -4px " + highlight,
      shadow: "inset -4px 4px 8px -4px " + shadow
    },
    N1: {
      background: baseBg,
      border: '0',
      highlight: "inset 2px -2px 4px " + highlight,
      shadow: "inset -2px 2px 4px " + shadow
    },
    0: {
      background: baseBg,
      border: "0",
      highlight: "inset -1px 1px 0px " + highlight,
      shadow: "0px 0px 1px 1px " + shadow
    },
    1: {
      background: baseBg,
      border: '0',
      highlight: "4px -4px 8px 0px " + highlight,
      shadow: "-4px 4px 8px 0 " + shadow
    },
    2: {
      background: baseBg,
      border: '0',
      highlight: "8px -8px 16px 0px " + highlight,
      shadow: "-8px 8px 16px 0 " + shadow
    }
  };
};

var _createTheme = createTheme(),
    lightTheme = _createTheme.light;

var ThemeContext = React.createContext({
  onToggleDarkMode: function onToggleDarkMode() {},
  theme: lightTheme
});

var ThemeProvider = function ThemeProvider(_ref) {
  var children = _ref.children,
      darkModeEnabled = _ref.darkModeEnabled,
      darkTheme = _ref.darkTheme,
      lightTheme = _ref.lightTheme;

  var _useState = React.useState(darkModeEnabled),
      darkMode = _useState[0],
      setDarkMode = _useState[1];

  var activeTheme = React.useMemo(function () {
    if (darkMode) return darkTheme;
    return lightTheme;
  }, [darkMode, darkTheme, lightTheme]);
  var handleToggleDarkMode = React.useCallback(function () {
    setDarkMode(!darkMode);
  }, [darkMode, setDarkMode]);
  var baseBg = activeTheme.baseBg,
      textColor = activeTheme.textColor;
  React.useEffect(function () {
    document.body.style.background = baseBg;
    document.body.style.backgroundAttachment = 'fixed';
    document.body.style.backgroundSize = 'cover';
    document.body.style.color = textColor;
  }, [baseBg, textColor]);
  return React__default.createElement(ThemeContext.Provider, {
    value: {
      darkMode: darkMode,
      onToggleDarkMode: handleToggleDarkMode,
      theme: activeTheme
    }
  }, React__default.createElement(styled.ThemeProvider, {
    theme: activeTheme
  }, children));
};

var useTheme = function useTheme() {
  var _useContext = React.useContext(ThemeContext),
      darkMode = _useContext.darkMode,
      onToggleDarkMode = _useContext.onToggleDarkMode,
      theme = _useContext.theme;

  return _extends({
    darkMode: darkMode,
    onToggleDarkMode: onToggleDarkMode
  }, theme);
};

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 100%;\n  justify-content: center;\n  margin: 0 ", "px;\n  padding: 0 ", "px;\n  text-decoration: none;\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 100%;\n  justify-content: center;\n  margin: 0 ", "px;\n  padding: 0 ", "px;\n  text-decoration: none;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  opacity: ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  background: ", ";\n  border: 0;\n  border-radius: ", "px;\n  box-shadow: ", ";\n  box-sizing: border-box;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  font-size: ", "px;\n  font-weight: 700;\n  height: ", "px;\n  justify-content: center;\n  margin: 0;\n  min-width: ", "px;\n  outline: none;\n  padding-left: ", "px;\n  padding-right: ", "px;\n  pointer-events: ", ";\n  white-space: nowrap;\n  width: ", ";\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}

var Button = function Button(_ref) {
  var children = _ref.children,
      disabled = _ref.disabled,
      full = _ref.full,
      href = _ref.href,
      onClick = _ref.onClick,
      round = _ref.round,
      size = _ref.size,
      text = _ref.text,
      to = _ref.to,
      variant = _ref.variant;
  var _useContext$theme = React.useContext(ThemeContext).theme,
      baseBg = _useContext$theme.baseBg,
      buttonSizes = _useContext$theme.buttonSizes,
      colors = _useContext$theme.colors,
      spacing = _useContext$theme.spacing,
      surfaces = _useContext$theme.surfaces,
      textColor = _useContext$theme.textColor;
  var boxShadow;
  var buttonSize;
  var buttonPadding;
  var fontSize;

  switch (size) {
    case 'sm':
      boxShadow = surfaces[1].shadow + ", " + surfaces[1].highlight;
      buttonPadding = spacing[3];
      buttonSize = buttonSizes.sm;
      fontSize = 14;
      break;

    case 'lg':
      boxShadow = surfaces[2].shadow + ", " + surfaces[2].highlight;
      buttonPadding = spacing[4];
      buttonSize = buttonSizes.lg;
      fontSize = 18;
      break;

    case 'md':
    default:
      boxShadow = surfaces[2].shadow + ", " + surfaces[2].highlight;
      buttonPadding = spacing[4];
      buttonSize = buttonSizes.md;
      fontSize = 16;
  }

  var background;
  var buttonColor;

  switch (variant) {
    case 'secondary':
      background = baseBg;
      buttonColor = colors.primary.main;
      break;

    case 'tertiary':
      background = 'transparent';
      boxShadow = surfaces[0].shadow + ", " + surfaces[0].highlight;
      buttonColor = textColor;
      break;

    case 'default':
    default:
      background = colors.primary.main;
      buttonColor = colors.white;
  }

  var ButtonText = React.useMemo(function () {
    return React__default.createElement(StyledButtonText, {
      color: buttonColor,
      disabled: disabled
    }, text);
  }, [buttonColor, disabled, text]);
  var ButtonChild = React.useMemo(function () {
    if (to) {
      return React__default.createElement(StyledLink, {
        to: to
      }, ButtonText);
    } else if (href) {
      return React__default.createElement(StyledExternalLink, {
        href: href,
        target: "__blank"
      }, ButtonText);
    } else {
      return ButtonText;
    }
  }, [ButtonText, href, text, to]);
  return React__default.createElement(StyledButton, {
    background: background,
    boxShadow: boxShadow,
    color: buttonColor,
    disabled: disabled,
    fontSize: fontSize,
    full: full,
    onClick: onClick,
    padding: buttonPadding,
    round: round,
    size: buttonSize
  }, children, ButtonChild);
};

var StyledButton = styled__default.button(_templateObject$1(), function (props) {
  return props.background;
}, function (props) {
  return props.theme.borderRadius;
}, function (props) {
  return props.boxShadow;
}, function (props) {
  return !props.disabled ? props.color : "" + props.color;
}, function (props) {
  return props.fontSize;
}, function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, function (props) {
  return props.round ? 0 : props.padding;
}, function (props) {
  return props.round ? 0 : props.padding;
}, function (props) {
  return !props.disabled ? undefined : 'none';
}, function (props) {
  return props.full ? '100%' : undefined;
});
var StyledButtonText = styled__default.span(_templateObject2(), function (props) {
  return props.disabled ? props.theme.textColor : props.color;
}, function (props) {
  return props.disabled ? 0.66 : 1;
});
var StyledExternalLink = styled__default.a(_templateObject3(), function (props) {
  return -props.theme.spacing[4];
}, function (props) {
  return props.theme.spacing[4];
});
var StyledLink = styled__default(reactRouterDom.Link)(_templateObject4(), function (props) {
  return -props.theme.spacing[4];
}, function (props) {
  return props.theme.spacing[4];
});

function _templateObject$2() {
  var data = _taggedTemplateLiteralLoose(["\n  background: ", ";\n  border: ", ";\n  border-radius: ", "px;\n  box-shadow: ", ";\n  box-sizing: ", ";\n  height: ", ";\n  width: ", ";\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}

var Surface = function Surface(_ref) {
  var children = _ref.children,
      detached = _ref.detached,
      _ref$elevation = _ref.elevation,
      elevation = _ref$elevation === void 0 ? 0 : _ref$elevation,
      fill = _ref.fill;
  var surfaces = React.useContext(ThemeContext).theme.surfaces;
  var _surfaces$elevation = surfaces[elevation],
      background = _surfaces$elevation.background,
      border = _surfaces$elevation.border,
      highlight = _surfaces$elevation.highlight,
      shadow = _surfaces$elevation.shadow;
  var boxShadow = shadow;

  if (!detached) {
    boxShadow = boxShadow + ", " + highlight;
  }

  return React__default.createElement(StyledSurface, {
    background: background,
    border: border,
    boxShadow: boxShadow,
    fill: fill
  }, children);
};

var StyledSurface = styled__default.div(_templateObject$2(), function (props) {
  return props.background;
}, function (props) {
  return props.border;
}, function (props) {
  return props.theme.borderRadius;
}, function (props) {
  return props.boxShadow;
}, function (props) {
  return props.fill ? 'border-box' : undefined;
}, function (props) {
  return props.fill ? '100%' : undefined;
}, function (props) {
  return props.fill ? '100%' : undefined;
});

var Card = function Card(_ref) {
  var children = _ref.children;
  return React__default.createElement(Surface, {
    elevation: "N1"
  }, React__default.createElement(Box, {
    overflow: "hidden"
  }, children));
};

function _templateObject$3() {
  var data = _taggedTemplateLiteralLoose(["\n  height: ", "px;\n  min-height: ", "px;\n  min-width: ", "px;\n  width: ", "px;\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}

var Spacer = function Spacer(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size;

  var _useContext = React.useContext(styled.ThemeContext),
      spacing = _useContext.spacing;

  var s;

  switch (size) {
    case 'lg':
      s = spacing[7];
      break;

    case 'sm':
      s = spacing[2];
      break;

    case 'md':
    default:
      s = spacing[4];
  }

  return React__default.createElement(StyledSpacer, {
    size: s
  });
};

var StyledSpacer = styled__default.div(_templateObject$3(), function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, function (props) {
  return props.size;
});

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["\n  flex: 1;\n"]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$4() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  display: flex;\n  margin: 0;\n  margin: ", "px;\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}

var CardActions = function CardActions(_ref) {
  var children = _ref.children;
  var l = React__default.Children.toArray(children).length;
  return React__default.createElement(StyledCardActions, null, React__default.Children.map(children, function (child, i) {
    return React__default.createElement(React.Fragment, null, React__default.createElement(StyledCardAction, null, child), i < l - 1 && React__default.createElement(Spacer, null));
  }));
};

var StyledCardActions = styled__default.div(_templateObject$4(), function (props) {
  return props.theme.spacing[4];
});
var StyledCardAction = styled__default.div(_templateObject2$1());

var CardContent = function CardContent(_ref) {
  var children = _ref.children;
  return React__default.createElement(Box, {
    column: true,
    margin: 4
  }, children);
};

function _templateObject$5() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  display: flex;\n  font-size: 48px;\n  justify-content: center;\n  margin: ", "px auto;\n"]);

  _templateObject$5 = function _templateObject() {
    return data;
  };

  return data;
}

var CardIcon = function CardIcon(_ref) {
  var children = _ref.children;
  return React__default.createElement(StyledCardIcon, null, children);
};

var StyledCardIcon = styled__default.div(_templateObject$5(), function (props) {
  return props.theme.spacing[4];
});

function _templateObject$6() {
  var data = _taggedTemplateLiteralLoose(["\n  box-shadow: ", ";\n  height: ", ";\n  width: ", ";\n"]);

  _templateObject$6 = function _templateObject() {
    return data;
  };

  return data;
}

var Separator = function Separator(_ref) {
  var orientation = _ref.orientation,
      stretch = _ref.stretch;
  var _useContext$theme = React.useContext(ThemeContext).theme,
      highlightColor = _useContext$theme.highlightColor,
      shadowColor = _useContext$theme.shadowColor;
  var boxShadow = "0 -1px 0px " + shadowColor + ", 0 1px 0px " + highlightColor;

  if (orientation === 'vertical') {
    boxShadow = "-1px 0px 0px " + shadowColor + ", 1px 0px 0px " + highlightColor;
  }

  var Content = React.useMemo(function () {
    return React__default.createElement(StyledSeparator, {
      boxShadow: boxShadow,
      orientation: orientation
    });
  }, [boxShadow, orientation]);

  if (stretch) {
    return React__default.createElement("div", {
      style: {
        alignSelf: 'stretch'
      }
    }, Content);
  }

  return Content;
};

var StyledSeparator = styled__default.div(_templateObject$6(), function (props) {
  return props.boxShadow;
}, function (props) {
  return props.orientation === 'vertical' ? '100%' : '1px';
}, function (props) {
  return props.orientation === 'vertical' ? '1px' : '100%';
});

function _templateObject$7() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  font-size: 18px;\n  text-align: center;\n"]);

  _templateObject$7 = function _templateObject() {
    return data;
  };

  return data;
}

var CardTitle = function CardTitle(_ref) {
  var text = _ref.text;
  return React__default.createElement(Box, {
    marginTop: 4
  }, React__default.createElement(StyledCardTitle, null, text), React__default.createElement(Box, {
    marginTop: 4,
    marginHorizontal: 4
  }, React__default.createElement(Separator, null)));
};

var StyledCardTitle = styled__default.span(_templateObject$7());

function _templateObject$8() {
  var data = _taggedTemplateLiteralLoose(["\n  fill: ", ";\n"]);

  _templateObject$8 = function _templateObject() {
    return data;
  };

  return data;
}

var Close = function Close(_ref) {
  var color = _ref.color;

  var _useTheme = useTheme(),
      textColor = _useTheme.textColor;

  return React__default.createElement(StyledSVG, {
    color: color ? color : textColor
  }, React__default.createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
  }));
};

var StyledSVG = styled__default.svg.attrs(function () {
  return {
    height: '24',
    viewBox: '0 0 24 24',
    width: '24'
  };
})(_templateObject$8(), function (props) {
  return props.color;
});

function _templateObject$9() {
  var data = _taggedTemplateLiteralLoose(["\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: ", "px;\n  padding: 0 ", "px;\n  width: 100%;\n"]);

  _templateObject$9 = function _templateObject() {
    return data;
  };

  return data;
}

var Container = function Container(_ref) {
  var children = _ref.children,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size;

  var _useContext = React.useContext(styled.ThemeContext),
      siteWidth = _useContext.siteWidth;

  var width;

  switch (size) {
    case 'sm':
      width = siteWidth / 2;
      break;

    case 'md':
      width = siteWidth * (2 / 3);
      break;

    case 'lg':
    default:
      width = siteWidth;
  }

  return React__default.createElement(StyledContainer, {
    width: width
  }, children);
};

var StyledContainer = styled__default.div(_templateObject$9(), function (props) {
  return props.width;
}, function (props) {
  return props.theme.spacing[4];
});

var Emoji = function Emoji(_ref) {
  var emoji = _ref.emoji,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size;
  return React__default.createElement("span", {
    role: "img",
    style: {
      fontSize: size
    }
  }, emoji);
};

function _templateObject$a() {
  var data = _taggedTemplateLiteralLoose(["\n  background: none;\n  border: 0;\n  color: ", ";\n  font-size: 18px;\n  flex: 1;\n  height: ", "px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n"]);

  _templateObject$a = function _templateObject() {
    return data;
  };

  return data;
}

var Input = function Input(_ref) {
  var endAdornment = _ref.endAdornment,
      onChange = _ref.onChange,
      placeholder = _ref.placeholder,
      size = _ref.size,
      startAdornment = _ref.startAdornment,
      value = _ref.value;
  var height = 56;

  if (size === 'sm') {
    height = 44;
  } else if (size === 'lg') {
    height = 72;
  }

  return React__default.createElement(Surface, {
    elevation: "N2"
  }, React__default.createElement(Box, {
    alignItems: "center",
    height: height,
    paddingHorizontal: 3,
    row: true
  }, !!startAdornment && React__default.createElement(React.Fragment, null, startAdornment, React__default.createElement(Spacer, {
    size: "sm"
  })), React__default.createElement(StyledInput, {
    height: height,
    onChange: onChange,
    placeholder: placeholder,
    value: value
  }), !!endAdornment && React__default.createElement(React.Fragment, null, React__default.createElement(Spacer, {
    size: "sm"
  }), endAdornment)));
};

var StyledInput = styled__default.input(_templateObject$a(), function (props) {
  return props.theme.textColor;
}, function (props) {
  return props.height;
});

function _templateObject4$1() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  max-height: calc(100vh - 72px);\n  max-width: 600px;\n  position: relative;\n  width: 100%;\n  @media (max-width: 600px) {\n    flex: 1;\n    position: absolute;\n    top: 100%;\n    right: 0;\n    left: 0;\n    max-height: calc(100% - ", "px);\n    animation: ", " .3s forwards ease-out;\n  }\n"]);

  _templateObject4$1 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteralLoose(["\n  background: ", ";\n  opacity: 0.75;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n"]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$2() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  backdrop-filter: blur(5px);\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n"]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$b() {
  var data = _taggedTemplateLiteralLoose(["\n  0% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(-100%);\n  }\n"]);

  _templateObject$b = function _templateObject() {
    return data;
  };

  return data;
}

var Modal = function Modal(_ref) {
  var children = _ref.children,
      isOpen = _ref.isOpen,
      onDismiss = _ref.onDismiss;

  if (isOpen) {
    return React__default.createElement(StyledModalWrapper, null, React__default.createElement(StyledModalBackdrop, {
      onClick: onDismiss
    }), React__default.createElement(StyledResponsiveWrapper, null, React__default.createElement(Surface, {
      detached: true,
      elevation: 2
    }, children)));
  }

  return null;
};

var mobileKeyframes = styled.keyframes(_templateObject$b());
var StyledModalWrapper = styled__default.div(_templateObject2$2());
var StyledModalBackdrop = styled__default.div(_templateObject3$1(), function (props) {
  return props.theme.colors.black;
});
var StyledResponsiveWrapper = styled__default.div(_templateObject4$1(), function (props) {
  return props.theme.spacing[4];
}, mobileKeyframes);

var ModalActions = function ModalActions(_ref) {
  var children = _ref.children;
  var l = React__default.Children.toArray(children).length;
  return React__default.createElement(Box, {
    alignItems: "center",
    height: 96,
    justifyContent: "flex-end",
    paddingHorizontal: 4,
    row: true
  }, React__default.Children.map(children, function (child, i) {
    return React__default.createElement(React.Fragment, null, child, i < l - 1 && React__default.createElement(Spacer, null));
  }));
};

var ModalContent = function ModalContent(_ref) {
  var children = _ref.children;
  return React__default.createElement(Box, {
    column: true,
    padding: 4
  }, children);
};

function _templateObject$c() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  display: flex;\n  font-size: 24px;\n  font-weight: 700;\n  justify-content: center;\n  margin-bottom: ", "px;\n"]);

  _templateObject$c = function _templateObject() {
    return data;
  };

  return data;
}

var ModalTitle = function ModalTitle(_ref) {
  var text = _ref.text;
  return React__default.createElement(Box, {
    padding: 4
  }, React__default.createElement(StyledModalTitle, null, text), React__default.createElement(Separator, null));
};

var StyledModalTitle = styled__default.div(_templateObject$c(), function (props) {
  return props.theme.spacing[4];
});

var Notice = function Notice(_ref) {
  var children = _ref.children,
      isHidden = _ref.isHidden,
      onDismiss = _ref.onDismiss;

  var _useState = React.useState(isHidden),
      hidden = _useState[0],
      setHidden = _useState[1];

  var handleDismissClick = React.useCallback(function () {
    setHidden(true);
    onDismiss && onDismiss();
  }, [onDismiss, setHidden]);
  React.useEffect(function () {
    setHidden(isHidden);
  }, [isHidden, setHidden]);
  return React__default.createElement(React.Fragment, null, !hidden && React__default.createElement(Surface, null, React__default.createElement(Box, {
    alignItems: "center",
    padding: 4,
    row: true
  }, children, React__default.createElement(Button, {
    onClick: handleDismissClick,
    round: true,
    size: "sm",
    variant: "tertiary"
  }, React__default.createElement(Close, null)))));
};

var NoticeContent = function NoticeContent(_ref) {
  var children = _ref.children;
  return React__default.createElement(Box, {
    flex: 1,
    paddingHorizontal: 3
  }, children);
};

function _templateObject$d() {
  var data = _taggedTemplateLiteralLoose(["\n  font-size: 32px;\n"]);

  _templateObject$d = function _templateObject() {
    return data;
  };

  return data;
}

var NoticeIcon = function NoticeIcon(_ref) {
  var children = _ref.children;
  return React__default.createElement(StyledIcon, null, children);
};

var StyledIcon = styled__default.span.attrs({
  role: 'img'
})(_templateObject$d());

var Switch = function Switch(_ref) {
  var children = _ref.children;
  var l = React__default.Children.toArray(children).length;
  return React__default.createElement(Surface, {
    elevation: "N2"
  }, React__default.createElement(Box, {
    padding: 2,
    row: true
  }, React__default.Children.map(children, function (child, i) {
    return React__default.createElement(React.Fragment, null, child, i < l - 1 && React__default.createElement(Spacer, {
      size: "sm"
    }));
  })));
};

function _templateObject$e() {
  var data = _taggedTemplateLiteralLoose(["\n  align-items: center;\n  background: ", ";\n  border: 0;\n  border-radius: ", "px;\n  box-shadow: ", ";\n  box-sizing: border-box;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  font-size: ", "px;\n  font-weight: 700;\n  height: ", "px;\n  justify-content: center;\n  margin: -2px 0 0;\n  min-width: ", "px;\n  outline: none;\n  padding: 0;\n  width: 100%;\n"]);

  _templateObject$e = function _templateObject() {
    return data;
  };

  return data;
}

var SwitchButton = function SwitchButton(_ref) {
  var active = _ref.active,
      children = _ref.children,
      onClick = _ref.onClick,
      round = _ref.round,
      size = _ref.size,
      text = _ref.text;
  var _useContext$theme = React.useContext(ThemeContext).theme,
      baseBg = _useContext$theme.baseBg,
      buttonSizes = _useContext$theme.buttonSizes,
      surfaces = _useContext$theme.surfaces;
  var boxShadow;
  var fontSize;

  switch (size) {
    case 'lg':
      boxShadow = "" + surfaces[1].shadow;
      fontSize = 16;
      break;

    case 'sm':
      boxShadow = "" + surfaces[1].shadow;
      fontSize = 14;
      break;

    default:
      boxShadow = "" + surfaces[1].shadow;
      fontSize = 16;
  }

  var background;

  if (active) {
    background = baseBg;
  } else {
    background = 'transparent';
  }

  return React__default.createElement(StyledSwitchButton, {
    active: active,
    background: background,
    boxShadow: boxShadow,
    fontSize: fontSize,
    round: round,
    size: buttonSizes.sm,
    onClick: onClick
  }, children, text);
};

var StyledSwitchButton = styled__default.button(_templateObject$e(), function (props) {
  return props.background;
}, function (props) {
  return props.theme.borderRadius;
}, function (props) {
  return props.active ? props.boxShadow : undefined;
}, function (props) {
  return props.active ? props.theme.colors.primary.main : "" + props.theme.textColor;
}, function (props) {
  return props.fontSize;
}, function (props) {
  return props.size;
}, function (props) {
  return props.size;
});

exports.Box = Box;
exports.Button = Button;
exports.Card = Card;
exports.CardActions = CardActions;
exports.CardContent = CardContent;
exports.CardIcon = CardIcon;
exports.CardTitle = CardTitle;
exports.CloseIcon = Close;
exports.Container = Container;
exports.Emoji = Emoji;
exports.Input = Input;
exports.Modal = Modal;
exports.ModalActions = ModalActions;
exports.ModalContent = ModalContent;
exports.ModalTitle = ModalTitle;
exports.Notice = Notice;
exports.NoticeContent = NoticeContent;
exports.NoticeIcon = NoticeIcon;
exports.Separator = Separator;
exports.Spacer = Spacer;
exports.Surface = Surface;
exports.Switch = Switch;
exports.SwitchButton = SwitchButton;
exports.ThemeContext = ThemeContext;
exports.ThemeProvider = ThemeProvider;
exports.createTheme = createTheme;
exports.useTheme = useTheme;
//# sourceMappingURL=index.js.map
